<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zzz部落格</title>
  
  <subtitle>知识服务于生活</subtitle>
  <link href="http://blog.ziiyc.com/atom.xml" rel="self"/>
  
  <link href="http://blog.ziiyc.com/"/>
  <updated>2025-02-28T02:17:00.000Z</updated>
  <id>http://blog.ziiyc.com/</id>
  
  <author>
    <name>zzz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows HyperV搭建Sunshine游戏串流服务</title>
    <link href="http://blog.ziiyc.com/post/windows-hyperv-sunshine.html"/>
    <id>http://blog.ziiyc.com/post/windows-hyperv-sunshine.html</id>
    <published>2025-02-28T01:00:00.000Z</published>
    <updated>2025-02-28T02:17:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>工作电脑是台式机，7x24开机，加装了48G内存(共64G)，1TB固态，并替换显卡为1660S，希望通过虚拟机隔离工作和游戏环境，充分利用硬件资源，所以研究了这个方案，已经稳定运行半年了。</p><p>宿主基本情况：</p><ul><li><p>CPU：i5-10400</p></li><li><p>内存：64G</p></li><li><p>显卡：GTX 1660S 6G</p></li><li><p>驱动版本：566.14</p></li><li><p>系统： Win11 23H2 Pro</p><h2 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h2></li><li><p>CPU：6核</p></li><li><p>内存：8G</p></li><li><p>显卡：<a href="https://lingkang.top/archives/hyper-v-gpu">hyper-v共享宿主显卡</a></p></li><li><p>系统：Win11 23H2 Pro</p><h3 id="软件环境搭建"><a href="#软件环境搭建" class="headerlink" title="软件环境搭建"></a>软件环境搭建</h3></li><li><p>系统激活：<a href="https://massgrave.dev/">massgrave.dev</a></p></li><li><p>安装游戏运行库：<a href="https://www.mefcl.com/grlpackage.html">游戏常用运行库合集</a></p></li><li><p>串流服务端 <a href="https://github.com/LizardByte/Sunshine">LizardByte/Sunshine</a></p><ul><li>使用虚拟声卡：VBCable驱动</li><li>！！！不要使用虚拟显示器：使用虚拟显示器进行串流会导致GPU识别异常（详情见FAQ）</li><li>修改版服务端：<a href="https://github.com/qiin2333/Sunshine-Foundation">qiin2333/Sunshine-Foundation</a> </li></ul></li><li><p>[可选]frp实现公网串流: <a href="https://github.com/koho/frpmgr">koko/frpmgr</a></p><ul><li>端口<ul><li>udp 47999 48000 48002 48010</li><li>tcp 47984 47989 48010</li></ul></li></ul></li><li><p>[可选]开启OpenSSH Server</p></li><li><p>[可选]串流时共享宿主键鼠 <a href="https://github.com/deskflow/deskflow">deskflow</a></p></li><li><p>[可选]使用沙盒工具：避免运行一些恶意程序导致系统异常 <a href="https://github.com/sandboxie-plus/Sandboxie">sandboxie-plus/Sandboxie</a> </p></li><li><p>[可选] 关闭Defender</p><ul><li>关闭：Windows 安全中心 -&gt; 主页 -&gt; 防火墙和网络保护（全部关闭）</li><li>使用工具 <a href="https://www.sordum.org/9480/defender-control-v2-1/">defender-control</a> 禁用Defender</li><li>禁用安全中心通知：打开组策略 -&gt; 计算机配置 -&gt; 管理模板 -&gt; Windows 组件 -&gt; Windows 安全中心 -&gt; 通知  -&gt; 启用：隐藏所有通知</li></ul></li><li><p>[可选]Steam</p></li></ul><h3 id="串流客户端工具列表"><a href="#串流客户端工具列表" class="headerlink" title="串流客户端工具列表"></a>串流客户端工具列表</h3><ul><li>Windows<ul><li>官方版 <a href="https://github.com/moonlight-stream/moonlight-qt">moonlight-stream/moonlight-qt</a></li></ul></li><li>Android<ul><li><a href="https://github.com/Axixi2233/moonlight-android">Axixi2233/moonlight-android</a> 目前在用，能够实现键盘原生输入（通过无障碍），界面比原版更加美观</li><li><a href="https://github.com/qiin2333/moonlight-android">qiin2333/moonlight-android</a> 威力加强版，加了不少特性并且是二次元图标和界面（不能修改图片、壁纸，个人不是很喜欢）</li><li>官方版 <a href="https://github.com/moonlight-stream/moonlight-android">moonlight-stream/moonlight-android</a><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2></li></ul></li></ul><h3 id="24H2运行部分破解游戏运行闪退"><a href="#24H2运行部分破解游戏运行闪退" class="headerlink" title="24H2运行部分破解游戏运行闪退"></a>24H2运行部分破解游戏运行闪退</h3><p>已知游戏列表：</p><ul><li>霍格沃茨之遗</li></ul><p>原因：24H2系统问题，使用23H2正常运行</p><h3 id="Yuzu、Ryujinx等Switch模拟器无法识别到GPU"><a href="#Yuzu、Ryujinx等Switch模拟器无法识别到GPU" class="headerlink" title="Yuzu、Ryujinx等Switch模拟器无法识别到GPU"></a>Yuzu、Ryujinx等Switch模拟器无法识别到GPU</h3><ul><li>需要使用原版Sunshine</li><li>如果任务管理器没有出现GPU，则需要退出所有远程会话的情况下重新添加GPU</li></ul><h3 id="串流画面卡住但有声音，能操作"><a href="#串流画面卡住但有声音，能操作" class="headerlink" title="串流画面卡住但有声音，能操作"></a>串流画面卡住但有声音，能操作</h3><p>情况说明：</p><ul><li>宿主通过smb3通过<strong>专用虚拟交换机</strong>共享游戏目录到HyperV虚拟机，使用共享目录打开游戏</li></ul><p>解决方式：</p><ul><li>宿主机关闭硬件加速gpu –&gt; 延长了问题出现的时间，有效果，但没有解决</li><li><strong>不使用网络共享，使用独立VHDX虚拟磁盘 –&gt; 改用后cpu占用率下降明显，并且玩了半小时多没有复现问题</strong></li></ul><h3 id="RDP后无法使用串流服务的问题"><a href="#RDP后无法使用串流服务的问题" class="headerlink" title="RDP后无法使用串流服务的问题"></a>RDP后无法使用串流服务的问题</h3><p>建议：不要使用远程桌面，可以考虑用RustDesk替代，相关文章：<a href="https://www.bilibili.com/read/cv16102714/">远程控制 解决RDP后无法使用moonlight等服务的问题 RDP断开时解锁主机</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;工作电脑是台式机，7x24开机，加装了48G内存(共64G)，1TB固态，并替换显卡为1660S，希望通过虚拟机隔离工作和游戏环境，充分利用</summary>
      
    
    
    
    
    <category term="自建服务" scheme="http://blog.ziiyc.com/tags/%E8%87%AA%E5%BB%BA%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="游戏" scheme="http://blog.ziiyc.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Obsidian+Hexo实现仪表盘及更新博客</title>
    <link href="http://blog.ziiyc.com/post/obsidian-dashboard-publish.html"/>
    <id>http://blog.ziiyc.com/post/obsidian-dashboard-publish.html</id>
    <published>2024-07-04T00:14:00.000Z</published>
    <updated>2024-07-04T00:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>看了一篇<a href="https://blog.zhangyingwei.com/posts/2022m4d12h13m13s22/">Obsidian + Hugo 最佳配置推荐</a>文章，做了一个Obsidian+Hexo博客仪表盘，配合之前的Hexo发布脚本，基本上在仅使用Obsidian的情况下完成博客的更新发布流程。先看效果图：</p><p><img src="https://blog.ziiyc.com/images/lc0t1l2q.pd4.png"></p><p><img src="https://blog.ziiyc.com/images/uqy5wnju.cdm.png"></p><span id="more"></span> <h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>Obsidian插件<ul><li>Charts</li><li>Dataview</li><li>Homepage(可选）</li></ul></li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li>安装好上述插件</li><li>在你当前vaults下创建一个blog目录，用于管理博客的原始文件</li><li>使用Homepage或者创建一个空白的md文件，输入以下仪表盘代码(需要去掉开头的<code>\\</code>)</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> ```dataviewjs</span><br><span class="line">\\ let la = [&quot;未发布&quot;,&quot;已发布&quot;]</span><br><span class="line">\\ let da = []</span><br><span class="line">\\ const draftPage = dv.pages(`<span class="string">&quot;blog&quot;</span>`).filter(p =&gt; p.draft).length</span><br><span class="line">\\ const notDraftPage = dv.pages(`<span class="string">&quot;blog&quot;</span>`).filter(p =&gt; !p.draft).length</span><br><span class="line">\\ da[0] = notDraftPage</span><br><span class="line">\\ da[1] = draftPage</span><br><span class="line">\\ </span><br><span class="line">\\ </span><br><span class="line">\\ dv.paragraph(`<span class="punctuation">\</span>`\`\`chart</span><br><span class="line">\\ type: pie</span><br><span class="line">\\ labels: [&quot;未发布&quot;,&quot;已发布&quot;]</span><br><span class="line">\\ series:</span><br><span class="line">\\     - title: none</span><br><span class="line">\\       data: [$&#123;da&#125;]</span><br><span class="line">\\ width: 25%</span><br><span class="line">\\ legendPosition: left</span><br><span class="line">\\ labelColors: true</span><br><span class="line">\\ \`\`\`</span><br><span class="line">\\ `<span class="punctuation">)</span>;</span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> ```</span><br><span class="line">\\ </span><br><span class="line">\\ ### 草稿箱</span><br><span class="line">\\ </span><br><span class="line">\\ ```dataview</span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> table updated AS <span class="string">&quot;更新时间&quot;</span><span class="punctuation">,</span>date AS <span class="string">&quot;创建时间&quot;</span></span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> from <span class="string">&quot;blog&quot;</span></span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> where draft<span class="operator">=</span>true</span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> sort updated desc</span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> ```</span><br><span class="line">\\ ### 已发布</span><br><span class="line">\\ </span><br><span class="line">\\ ```dataview</span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> table updated AS <span class="string">&quot;更新时间&quot;</span><span class="punctuation">,</span>date AS <span class="string">&quot;创建时间&quot;</span></span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> from <span class="string">&quot;blog&quot;</span></span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> where draft<span class="operator">=</span>false or <span class="operator">!</span>draft</span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> sort updated desc</span><br><span class="line"><span class="punctuation">\</span><span class="punctuation">\</span> ```</span><br></pre></td></tr></table></figure><ul><li>配合以下的RunJS发布Hexo脚本，原理：将原文档上传到Hexo源码仓库，触发Github Actions更新博客</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@RunJS</span> hexo/publish</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// setting</span></span><br><span class="line"><span class="keyword">const</span> token = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> owner = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> repo = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> remote_image_path = <span class="string">&#x27;source/images&#x27;</span></span><br><span class="line"><span class="keyword">const</span> action = <span class="string">&#x27;deploy.yml&#x27;</span></span><br><span class="line"><span class="keyword">const</span> attachment_path = <span class="string">&#x27;media/image&#x27;</span></span><br><span class="line"><span class="keyword">const</span> image_map_path = <span class="string">&#x27;media/script/data/image-map.json&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">readJsonFile</span>(<span class="params">filePath</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 使用vault的read方法读取文件内容</span></span><br><span class="line">        <span class="keyword">const</span> fileContent = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">vault</span>.<span class="title function_">read</span>(<span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">vault</span>.<span class="title function_">getAbstractFileByPath</span>(filePath));</span><br><span class="line">        <span class="comment">// 将读取到的内容解析为JSON对象</span></span><br><span class="line">        <span class="keyword">const</span> jsonData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(fileContent);</span><br><span class="line">        <span class="comment">// console.log(jsonData);</span></span><br><span class="line">        <span class="keyword">return</span> jsonData;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error reading JSON file:&quot;</span>, error);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">arrayBufferToBase64</span>(<span class="params">buffer</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> binary = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> bytes = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(buffer);</span><br><span class="line">    <span class="keyword">const</span> len = bytes.<span class="property">byteLength</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        binary += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(bytes[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 使用 btoa 函数将二进制字符串转换为 Base64 字符串</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="title function_">btoa</span>(binary);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">readImageAsDataURL</span>(<span class="params">img, fileExt</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 使用vault的readBinary方法读取二进制文件内容</span></span><br><span class="line">        <span class="keyword">const</span> fileContent = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">vault</span>.<span class="title function_">readBinary</span>(img);</span><br><span class="line">        <span class="comment">// 创建一个Blob对象</span></span><br><span class="line">        <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([fileContent], &#123; <span class="attr">type</span>: <span class="string">`image/<span class="subst">$&#123;fileExt&#125;</span>`</span> &#125;); <span class="comment">// 假设图片是PNG格式</span></span><br><span class="line">        <span class="keyword">return</span> blob</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error reading image file:&quot;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getFileSha</span>(<span class="params">owner, repo, path</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">`https://api.github.com/repos/<span class="subst">$&#123;owner&#125;</span>/<span class="subst">$&#123;repo&#125;</span>/contents/<span class="subst">$&#123;path&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">const</span> requestUrlParam = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`token <span class="subst">$&#123;token&#125;</span>`</span>,</span><br><span class="line">            <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/vnd.github.v3+json&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">requestUrl</span>(requestUrlParam);</span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">status</span> === <span class="number">200</span> || response.<span class="property">status</span> === <span class="number">201</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> response.<span class="property">json</span>.<span class="property">sha</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;失败&#x27;</span>, response.<span class="property">status</span>, response.<span class="property">text</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`异常: <span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">base64EncodeUnicode</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">btoa</span>(<span class="built_in">encodeURIComponent</span>(str).<span class="title function_">replace</span>(<span class="regexp">/%([0-9A-F]&#123;2&#125;)/g</span>, <span class="keyword">function</span> (<span class="params">match, p1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="string">&#x27;0x&#x27;</span> + p1);</span><br><span class="line">    &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">updateFile</span>(<span class="params">owner, repo, path, content, sha, message = <span class="string">&quot;update via Obsidian&quot;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">`https://api.github.com/repos/<span class="subst">$&#123;owner&#125;</span>/<span class="subst">$&#123;repo&#125;</span>/contents/<span class="subst">$&#123;path&#125;</span>`</span>;</span><br><span class="line">    requestUrlParam = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`token <span class="subst">$&#123;token&#125;</span>`</span>,</span><br><span class="line">            <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/vnd.github.v3+json&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">            message,</span><br><span class="line">            <span class="attr">content</span>: content,</span><br><span class="line">            sha</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">requestUrl</span>(requestUrlParam);</span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">status</span> === <span class="number">200</span> || response.<span class="property">status</span> === <span class="number">201</span>) &#123;</span><br><span class="line">            <span class="comment">// console.log(response.json)</span></span><br><span class="line">            <span class="keyword">return</span> response.<span class="property">json</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;失败&#x27;</span>, response.<span class="property">status</span>, response.<span class="property">text</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Notice</span>(<span class="string">`异常: <span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">uploadFileToGitHub</span>(<span class="params">owner, repo, path, content</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> sha = <span class="keyword">await</span> <span class="title function_">getFileSha</span>(owner, repo, path);</span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">updateFile</span>(owner, repo, path, content, sha, <span class="string">&quot;Update via Obsidian&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;文件更新成功:&quot;</span>, result);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;更新文件时发生错误:&quot;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isUrl</span>(<span class="params">link</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Boolean</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(link));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (_) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">triggerHexoDeploy</span>(<span class="params">owner, repo, action</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">`https://api.github.com/repos/<span class="subst">$&#123;owner&#125;</span>/<span class="subst">$&#123;repo&#125;</span>/actions/workflows/<span class="subst">$&#123;action&#125;</span>/dispatches`</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(url)</span><br><span class="line">    <span class="keyword">const</span> requestUrlParam = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`token <span class="subst">$&#123;token&#125;</span>`</span>,</span><br><span class="line">            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">            <span class="attr">ref</span>: <span class="string">&quot;master&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">requestUrl</span>(requestUrlParam);</span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">status</span> === <span class="number">204</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触发博客更新成功&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;触发博客更新失败&#x27;</span>, response.<span class="property">status</span>, response.<span class="property">text</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Notice</span>(<span class="string">`触发博客更新请求异常: <span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main</span></span><br><span class="line"><span class="keyword">const</span> activeFile = <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">workspace</span>.<span class="title function_">getActiveFile</span>();</span><br><span class="line"><span class="keyword">if</span> (!activeFile) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;No file is currently active.&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(activeFile)</span><br><span class="line"><span class="keyword">let</span> content = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">vault</span>.<span class="title function_">read</span>(activeFile)</span><br><span class="line"><span class="keyword">let</span> image_map = <span class="keyword">await</span> <span class="title function_">readJsonFile</span>(image_map_path)</span><br><span class="line"><span class="comment">// 图片上传</span></span><br><span class="line"><span class="keyword">const</span> imageRegex = <span class="regexp">/!\[[^$].*?\]\(([^$].*?)\)|!\[\[([^$].*?)\]\]/g</span>;</span><br><span class="line"><span class="comment">// const imageRegex2 = /!\[\[(.*?)\]\]/g</span></span><br><span class="line"><span class="keyword">const</span> images = []</span><br><span class="line"><span class="keyword">let</span> match</span><br><span class="line"><span class="keyword">let</span> img</span><br><span class="line"><span class="keyword">let</span> img_name</span><br><span class="line"><span class="keyword">let</span> img_content</span><br><span class="line"><span class="keyword">while</span> ((match = imageRegex.<span class="title function_">exec</span>(content)) !== <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (match[<span class="number">1</span>] || match[<span class="number">2</span>]) &#123;</span><br><span class="line">        img_name = match[<span class="number">1</span>] || match[<span class="number">2</span>]</span><br><span class="line">        images.<span class="title function_">push</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(img_name)</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_">isUrl</span>(img_name)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (match[<span class="number">1</span>]) &#123;</span><br><span class="line">            img = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">vault</span>.<span class="title function_">getAbstractFileByPath</span>(img_name);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            img = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">vault</span>.<span class="title function_">getAbstractFileByPath</span>(<span class="string">`<span class="subst">$&#123;attachment_path&#125;</span>/<span class="subst">$&#123;img_name&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(img)</span><br><span class="line">        <span class="keyword">if</span> (!image_map.<span class="title function_">hasOwnProperty</span>(img.<span class="property">name</span>)) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`upload: <span class="subst">$&#123;img.name&#125;</span>`</span>)</span><br><span class="line">            img_content = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">vault</span>.<span class="title function_">readBinary</span>(img);</span><br><span class="line">            img_content = <span class="title function_">arrayBufferToBase64</span>(img_content);</span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">uploadFileToGitHub</span>(owner, repo, <span class="string">`<span class="subst">$&#123;remote_image_path&#125;</span>/<span class="subst">$&#123;img.name&#125;</span>`</span>, img_content)</span><br><span class="line">            image_map[img.<span class="property">name</span>] = <span class="string">`https://blog.ziiyc.com/images/<span class="subst">$&#123;img.name&#125;</span>`</span></span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">vault</span>.<span class="property">adapter</span>.<span class="title function_">write</span>(image_map_path, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(image_map, <span class="literal">null</span>, <span class="number">2</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (match[<span class="number">1</span>]) &#123;</span><br><span class="line">            content = content.<span class="title function_">replace</span>(img_name, image_map[img.<span class="property">name</span>])</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (match[<span class="number">2</span>]) &#123;</span><br><span class="line">            content = content.<span class="title function_">replace</span>(<span class="string">`![[<span class="subst">$&#123;img_name&#125;</span>]]`</span>, <span class="string">`![](<span class="subst">$&#123;image_map[img.name]&#125;</span>)`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">content = content.<span class="title function_">replaceAll</span>(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(content)</span><br><span class="line"><span class="keyword">const</span> path = <span class="string">`source/_posts/<span class="subst">$&#123;activeFile.name&#125;</span>`</span>;</span><br><span class="line"><span class="keyword">await</span> <span class="title function_">uploadFileToGitHub</span>(owner, repo, path, <span class="title function_">base64EncodeUnicode</span>(content))</span><br><span class="line"><span class="keyword">await</span> <span class="title function_">triggerHexoDeploy</span>(owner, repo, action)</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Notice</span>(<span class="string">&quot;博客更新成功&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;看了一篇&lt;a href=&quot;https://blog.zhangyingwei.com/posts/2022m4d12h13m13s22/&quot;&gt;Obsidian + Hugo 最佳配置推荐&lt;/a&gt;文章，做了一个Obsidian+Hexo博客仪表盘，配合之前的Hexo发布脚本，基本上在仅使用Obsidian的情况下完成博客的更新发布流程。先看效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.ziiyc.com/images/lc0t1l2q.pd4.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.ziiyc.com/images/uqy5wnju.cdm.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>VSCode调试Python2.7代码</title>
    <link href="http://blog.ziiyc.com/post/vscode-debug-python2.html"/>
    <id>http://blog.ziiyc.com/post/vscode-debug-python2.html</id>
    <published>2024-05-16T07:44:00.000Z</published>
    <updated>2024-05-16T08:33:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>VSCode使用最新版本Python插件，调试Python2代码无反应</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>Python插件调试时需要调用 <a href="https://github.com/microsoft/debugpy">debugpy</a>，debugpy在2022-03-25发布v1.6.0后不再支持调试Python 2</p><p><img src="https://blog.ziiyc.com/images/20240516154929.png"></p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><span id="more"></span> <ul><li>右键Python插件，选择安装另一个版本，选择版本：<code>2022.2.1924087327</code><br><img src="https://blog.ziiyc.com/images/20240516163121.png"></li></ul><p><img src="https://blog.ziiyc.com/images/20240516155231.png"></p><p>如果同时需要使用Pylance，则需要将Pylance安装为同时期发布的版本，比如：<code>2022.2.4</code>，否则会产生以下报错：<code>Couldn&#39;t start client Python Tools</code></p><p><img src="https://blog.ziiyc.com/images/20240516155533.png"></p><blockquote><p>Request initialize failed with message: You may install and use any number of copies of the software only with Microsoft Visual Studio, Visual Studio for Mac, Visual Studio Code, Azure DevOps, Team Foundation Server, and successor Microsoft products and services (collectively, the “Visual Studio Products and Services”) to develop and test your applications. The software is licensed, not sold. This agreement only gives you some rights to use the software. Microsoft reserves all other rights. You may not: work around any technical limitations in the software that only allow you to use it in certain ways; reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software; remove, minimize, block, or modify any notices of Microsoft or its suppliers in the software; use the software in any…</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;VSCode使用最新版本Python插件，调试Python2代码无反应&lt;/p&gt;
&lt;h2 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;Python插件调试时需要调用 &lt;a href=&quot;https://github.com/microsoft/debugpy&quot;&gt;debugpy&lt;/a&gt;，debugpy在2022-03-25发布v1.6.0后不再支持调试Python 2&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.ziiyc.com/images/20240516154929.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;解决&quot;&gt;&lt;a href=&quot;#解决&quot; class=&quot;headerlink&quot; title=&quot;解决&quot;&gt;&lt;/a&gt;解决&lt;/h2&gt;</summary>
    
    
    
    
    <category term="开发" scheme="http://blog.ziiyc.com/tags/%E5%BC%80%E5%8F%91/"/>
    
    <category term="IDE" scheme="http://blog.ziiyc.com/tags/IDE/"/>
    
  </entry>
  
  <entry>
    <title>使用Nextcloud+Syncthing同步Obsidian资料库</title>
    <link href="http://blog.ziiyc.com/post/nextcloud-syncthing-sync-obsidian.html"/>
    <id>http://blog.ziiyc.com/post/nextcloud-syncthing-sync-obsidian.html</id>
    <published>2021-10-14T10:21:30.000Z</published>
    <updated>2021-10-15T01:48:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在不使用官方的Obsidian Sync的情况下，在移动设备如Android、IOS上进行笔记同步是比较麻烦的事情，看过不少文章使用各种方式进行同步，比如以下：</p><ul><li><a href="https://sspai.com/post/65316">Obsidian 的 Android 伴侣：GitJournal 使用指南</a> 需要使用Git，并且目前已经有官方的Obsidian Android/IOS客户端</li><li><a href="https://bugeshan.com/manual/obsidian-sync-guide-20210713/">Obsidian 多端同步简明指南</a>  完全使用Syncthing的情况下，可以在PC和移动设备间同步，但在设备较多的情况下，会出现大量的同步冲突文件，体验不友好</li><li>[<a href="https://zhuanlan.zhihu.com/p/402587731]">https://zhuanlan.zhihu.com/p/402587731]</a>(Obsidian Windows与安卓端同步) 使用Onedrive+FolderSync在PC和Android间同步，但FolderSync同步效率极慢，但文件数量多的情况下，体验很差（比如1000个文件，完全同步需要1分钟）</li></ul><p>综上，本人使用Nextcloud和Syncthing在PC端和移动设备进行笔记的同步，使用inotifywait监控两边目录改动，运行nextcloudcmd命令进行同步。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>自建NextCloud服务端</li><li>自建Syncthing服务</li><li>安装nextcloudcmd、inotifywait</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>运行以下脚本即可，说明：</p><ul><li>填入参数即可</li><li>启动命令： <code>bash nextcloud-sync.sh start</code></li><li>停止命令： <code>bash nextcloud-sync.sh stop</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash  </span></span><br><span class="line"><span class="comment"># author: kkzzhizhou</span></span><br><span class="line"><span class="comment"># desc: nextcloud inotify sync script.</span></span><br><span class="line"><span class="comment"># This script is a wrapper around nextcloudcmd, designed to keep a local directory synchronised with a Nextcloud repository.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Usage: nextcloud-sync.sh configfile</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The config file must contain &quot;username&quot;, &quot;password&quot;, &quot;local&quot; directory and &quot;remote&quot; URL to a Nextcloud service. </span></span><br><span class="line"></span><br><span class="line">PROG=$(<span class="built_in">basename</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span><br><span class="line">PROGDIR=$(<span class="built_in">cd</span> <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>&quot;</span> &amp;&amp; <span class="built_in">pwd</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">set</span> -u</span><br><span class="line"><span class="built_in">set</span> -o pipefail</span><br><span class="line"></span><br><span class="line">USERNAME=<span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">PASSWORD=<span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">LOCAL_DIR=<span class="string">&quot;xxx&quot;</span> <span class="comment"># 本地Syncthing文件夹路径</span></span><br><span class="line">REMOTE_URI=<span class="string">&quot;https://xxx&quot;</span> <span class="comment"># 填写Nextcloud服务地址</span></span><br><span class="line">DAVPATH=<span class="string">&quot;Notes&quot;</span></span><br><span class="line">NEXTCLOUD_DATA_DIR=<span class="string">&#x27;xxx&#x27;</span>  <span class="comment"># 填写Nextcloud用户数据路径</span></span><br><span class="line">NEXTCLOUD_DIR=<span class="string">&quot;<span class="variable">$NEXTCLOUD_DATA_DIR</span>/<span class="variable">$USERNAME</span>/files/<span class="variable">$DAVPATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span> </span><br><span class="line">    start)</span><br><span class="line">        <span class="built_in">echo</span> 0 &gt; <span class="string">&quot;<span class="variable">$PROGDIR</span>/sync.lock&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;start monitoring: <span class="variable">$&#123;LOCAL_DIR&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;start monitoring: <span class="variable">$&#123;NEXTCLOUD_DIR&#125;</span>&quot;</span></span><br><span class="line">        /usr/bin/inotifywait -mrq --exclude <span class="string">&#x27;/\..*&#x27;</span> --timefmt <span class="string">&#x27;%d/%m/%y %H:%M:%S&#x27;</span> --format <span class="string">&#x27;%T %w %f %e&#x27;</span> -e modify,delete,create <span class="string">&quot;<span class="variable">$LOCAL_DIR</span>&quot;</span> -o <span class="variable">$PROGDIR</span>/inotify.log -d</span><br><span class="line">        /usr/bin/inotifywait -mrq --exclude <span class="string">&#x27;/\..*&#x27;</span> --timefmt <span class="string">&#x27;%d/%m/%y %H:%M:%S&#x27;</span> --format <span class="string">&#x27;%T %w %f %e&#x27;</span> -e modify,delete,create <span class="variable">$&#123;NEXTCLOUD_DIR&#125;</span> -o <span class="variable">$PROGDIR</span>/inotify.log -d</span><br><span class="line">        <span class="built_in">nohup</span> /usr/bin/inotifywait -mq --timefmt <span class="string">&#x27;%d/%m/%y %H:%M:%S&#x27;</span> --format <span class="string">&#x27;%T %w %f %e&#x27;</span> -e modify <span class="variable">$PROGDIR</span>/inotify.log | <span class="keyword">while</span> <span class="built_in">read</span> file </span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            last_sync_timestamp=$(<span class="built_in">cat</span> <span class="variable">$PROGDIR</span>/sync.lock)</span><br><span class="line">            current_timestamp=$(<span class="built_in">date</span> +%s)</span><br><span class="line">            timestamp_check=$[<span class="variable">$last_sync_timestamp</span> + 10]</span><br><span class="line">            <span class="keyword">if</span> [ <span class="variable">$timestamp_check</span> -lt <span class="variable">$current_timestamp</span> ];<span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$current_timestamp</span> &gt; <span class="string">&quot;<span class="variable">$PROGDIR</span>/sync.lock&quot;</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$current_timestamp</span>: sync was started&quot;</span></span><br><span class="line">                nextcloudcmd -s --non-interactive --user <span class="string">&quot;<span class="variable">$USERNAME</span>&quot;</span> --password <span class="string">&quot;<span class="variable">$PASSWORD</span>&quot;</span> --path <span class="string">&quot;<span class="variable">$DAVPATH</span>&quot;</span> <span class="string">&quot;<span class="variable">$LOCAL_DIR</span>&quot;</span> <span class="string">&quot;<span class="variable">$REMOTE_URI</span>&quot;</span></span><br><span class="line">            <span class="comment">#else</span></span><br><span class="line">                <span class="comment">#echo &quot;$current_timestamp: sync ignored&quot;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span> &gt; <span class="string">&quot;<span class="variable">$PROGDIR</span>/sync.log&quot;</span> &amp; 2&gt;&amp;1</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;stop all monitoring&quot;</span></span><br><span class="line">        pkill inotifywait</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在不使用官方的Obsidian Sync的情况下，在移动设备如Android、IOS上进行笔记同步是比较麻烦的事情，看过不少文章使用各种方式</summary>
      
    
    
    
    
    <category term="实践" scheme="http://blog.ziiyc.com/tags/%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>nextcloud-uploader：文件上传Nextcloud获取内部链接</title>
    <link href="http://blog.ziiyc.com/post/nextcloud-uploader.html"/>
    <id>http://blog.ziiyc.com/post/nextcloud-uploader.html</id>
    <published>2021-09-18T07:29:23.000Z</published>
    <updated>2021-09-18T07:33:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>最近改造Obsidian附件管理，使用自建的Nextcloud作为附件存储，所以有了一个需求，右键文件上传至Nextcloud并获取内部链接（为什么不使用外部链接呢？因为笔记属于重要资料性质，采用内部链接更能保证附件的保密性），因此自己使用Python开发的Windows下右键菜单上传至NextCloud并获取内部链接复制到剪贴板的工具。代码已经开源在Github上，欢迎大家使用。</p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><ul><li><a href="https://github.com/kkzzhizhou/nextcloud-uploader">nextcloud-uploader项目地址</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">scoop</span> bucket <span class="keyword">add</span> zapps https:<span class="comment">//github.com/kkzzhizhou/scoop-zapps</span></span><br><span class="line"><span class="symbol">scoop</span> install nextcloud-uploader</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>修改config.json文件, 放在程序的/data目录下，格式如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;nextcloud_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;upload_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><span id="more"></span> ]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;最近改造Obsidian附件管理，使用自建的Nextcloud作为附件存储，所以有了一个需求，右键文件上传至Nextcloud并获取内部链接（为什么不使用外部链接呢？因为笔记属于重要资料性质，采用内部链接更能保证附件的保密性），因此自己使用Python开发的Windows下右键菜单上传至NextCloud并获取内部链接复制到剪贴板的工具。代码已经开源在Github上，欢迎大家使用。&lt;/p&gt;
&lt;h1 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kkzzhizhou/nextcloud-uploader&quot;&gt;nextcloud-uploader项目地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;scoop&lt;/span&gt; bucket &lt;span class=&quot;keyword&quot;&gt;add&lt;/span&gt; zapps https:&lt;span class=&quot;comment&quot;&gt;//github.com/kkzzhizhou/scoop-zapps&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;scoop&lt;/span&gt; install nextcloud-uploader&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h1&gt;&lt;p&gt;修改config.json文件, 放在程序的/data目录下，格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;nextcloud_url&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;upload_path&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="效率工具" scheme="http://blog.ziiyc.com/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>OpenVPN实现内网互通</title>
    <link href="http://blog.ziiyc.com/post/openvpn-connect-lan.html"/>
    <id>http://blog.ziiyc.com/post/openvpn-connect-lan.html</id>
    <published>2021-08-26T08:44:42.000Z</published>
    <updated>2021-08-26T08:56:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>实现公司通过SMB访问租房NAS,并且拨通OpenVPN之后，只有OpenVPN客户端之间的流量经过OpenVPN，其他流量按原来的方式。</p><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><ul><li>OpenVPN Server(Ubuntu)</li><li>OpenVPN Client(Windows、CentOS)</li></ul><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ul><li>在Ubuntu机器上安装OpenVPN, <code>curl -O https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh &amp;&amp; bash openvpn-install.sh</code></li><li>修改OpenVPN Server的配置文件, <code>vim /etc/openvpn/server.conf</code></li></ul><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">;服务端配置</span><br><span class="line">port <span class="number">1194</span></span><br><span class="line">proto tcp</span><br><span class="line">dev tun</span><br><span class="line">user nobody</span><br><span class="line">group nogroup</span><br><span class="line">persist-<span class="built_in">key</span></span><br><span class="line">persist-tun</span><br><span class="line">keepalive <span class="number">10</span> <span class="number">120</span></span><br><span class="line">topology subnet</span><br><span class="line">client-to-client # 允许客户端之间的连接</span><br><span class="line">server <span class="number">192.168</span><span class="number">.10</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">ifconfig-pool-persist ipp.txt</span><br><span class="line">dh none</span><br><span class="line">persist-<span class="built_in">key</span></span><br><span class="line">persist-tun</span><br><span class="line">ecdh-curve prime256v1</span><br><span class="line">tls-crypt tls-crypt.<span class="built_in">key</span></span><br><span class="line">crl-verify crl.pem</span><br><span class="line">ca ca.crt</span><br><span class="line">cert server_JFIAtsavKPr9oaij.crt</span><br><span class="line"><span class="built_in">key</span> server_JFIAtsavKPr9oaij.<span class="built_in">key</span></span><br><span class="line">auth SHA256</span><br><span class="line">cipher AES-<span class="number">128</span>-GCM</span><br><span class="line">ncp-ciphers AES-<span class="number">128</span>-GCM</span><br><span class="line">tls-server</span><br><span class="line">tls-version-<span class="built_in">min</span> <span class="number">1.2</span></span><br><span class="line">tls-cipher TLS-ECDHE-ECDSA-WITH-AES-<span class="number">128</span>-GCM-SHA256</span><br><span class="line">client-config-dir /etc/openvpn/ccd</span><br><span class="line"><span class="built_in">status</span> /<span class="built_in">var</span>/<span class="built_in">log</span>/openvpn/<span class="built_in">status</span>.<span class="built_in">log</span></span><br><span class="line"><span class="built_in">log</span> /<span class="built_in">var</span>/<span class="built_in">log</span>/openvpn.<span class="built_in">log</span></span><br><span class="line">duplicate-cn  # 允许多个客户端使用同一个配置文件</span><br><span class="line">verb <span class="number">3</span></span><br></pre></td></tr></table></figure><ul><li>OpenVPN生成的客户端配置在设置的用户名home目录下，有个<user>.ovpn, 修改这个配置文件如下：</li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">client</span><br><span class="line">proto tcp</span><br><span class="line">remote &lt;公网IP&gt; &lt;端口&gt;</span><br><span class="line">dev tun</span><br><span class="line">resolv-retry infinite</span><br><span class="line">nobind</span><br><span class="line">dhcp-option DNS 192.168.5.1 <span class="comment"># 配置为你的默认的DNS服务器地址</span></span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">remote-cert-tls server</span><br><span class="line">verify-x509-name server_JFIAtsavKPr9oaij name</span><br><span class="line">auth SHA256</span><br><span class="line">auth-nocache</span><br><span class="line">cipher AES-128-GCM</span><br><span class="line">tls-client</span><br><span class="line">tls-version-min 1.2</span><br><span class="line">tls-cipher TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256</span><br><span class="line">ignore-unknown-option block-outside-dns</span><br><span class="line">;setenv opt block-outside-dns <span class="comment"># Prevent Windows 10 DNS leak</span></span><br><span class="line">verb 3</span><br><span class="line">&lt;ca&gt;</span><br><span class="line"><span class="params">-----BEGIN</span> CERTIFICATE<span class="params">-----</span></span><br><span class="line"><span class="string">......</span> <span class="comment"># 省略</span></span><br><span class="line"><span class="params">-----END</span> CERTIFICATE<span class="params">-----</span></span><br><span class="line">&lt;<span class="string">/ca</span>&gt;</span><br><span class="line">&lt;cert&gt;</span><br><span class="line"><span class="params">-----BEGIN</span> CERTIFICATE<span class="params">-----</span></span><br><span class="line"><span class="string">......</span> <span class="comment"># 省略</span></span><br><span class="line"><span class="params">-----END</span> CERTIFICATE<span class="params">-----</span></span><br><span class="line">&lt;<span class="string">/cert</span>&gt;</span><br><span class="line">&lt;key&gt;</span><br><span class="line"><span class="params">-----BEGIN</span> ENCRYPTED PRIVATE KEY<span class="params">-----</span></span><br><span class="line"><span class="string">......</span> <span class="comment"># 省略</span></span><br><span class="line"><span class="params">-----END</span> ENCRYPTED PRIVATE KEY<span class="params">-----</span></span><br><span class="line">&lt;<span class="string">/key</span>&gt;</span><br><span class="line">&lt;tls-crypt&gt;</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 2048 bit OpenVPN static key</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="params">-----BEGIN</span> OpenVPN Static key V1<span class="params">-----</span></span><br><span class="line"><span class="string">......</span> <span class="comment"># 省略</span></span><br><span class="line"><span class="params">-----END</span> OpenVPN Static key V1<span class="params">-----</span></span><br><span class="line">&lt;<span class="string">/tls-crypt</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>Windows安装openvpn客户端, <code>scoop install openvpn</code></li><li>CentOS安装openvpn客户端, <code>yum -y install openvpn</code>，CentOS openvpn client启动命令为：openvpn –config /data/openvpn/com-lan.ovpn –daemon</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;p&gt;实现公司通过SMB访问租房NAS,并且拨通OpenVPN之后，只有OpenVPN客户端之间的流量经过OpenVPN，其他流量按原来的方式。&lt;</summary>
      
    
    
    
    
    <category term="OpenVPN" scheme="http://blog.ziiyc.com/tags/OpenVPN/"/>
    
  </entry>
  
  <entry>
    <title>用Auto Scaling进行网站压测</title>
    <link href="http://blog.ziiyc.com/post/use-auto-scaling-to-pressure-test.html"/>
    <id>http://blog.ziiyc.com/post/use-auto-scaling-to-pressure-test.html</id>
    <published>2021-03-30T12:12:23.000Z</published>
    <updated>2021-03-30T13:12:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>使用自动化程序模拟用户下单，对SaaS建站前端Web界面进行压力测试</p><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><ul><li>在EC2提供的Auto Scaling</li><li>自动化程序运行环境：Windows Server 2019</li></ul><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ul><li>制作线上仿真环境：从rds快照中新建实例用于仿真数据库，同时redis也是同样的操作</li><li>制作Windows Server 2019程序镜像，将程序打包在系统镜像中（IAM)，并配置开机自启动</li></ul><span id="more"></span> <h1 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取auto scaling实例</span></span><br><span class="line">ids=<span class="variable">$</span>(aws autoscaling describe<span class="literal">-auto-scaling-instances</span> | jq <span class="literal">-r</span> .AutoScalingInstances[].InstanceId)</span><br><span class="line"><span class="comment"># 获取auto scaling实例IP</span></span><br><span class="line"><span class="keyword">for</span> id <span class="keyword">in</span> <span class="variable">$</span>&#123;ids[<span class="selector-tag">@</span>]&#125;;<span class="keyword">do</span> aws ec2 describe<span class="literal">-instances</span> <span class="literal">--instance-ids</span> <span class="variable">$id</span> | grep PrivateIpAddress  | head <span class="literal">-1</span> | awk <span class="operator">-F</span> <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | sed <span class="string">&#x27;s/[&quot;, ]//g&#x27;</span>; done &gt;&gt; ids.txt</span><br><span class="line"><span class="comment"># 生成rdp文件</span></span><br><span class="line">IFS=<span class="variable">$</span><span class="string">&#x27;\n&#x27;</span>;<span class="keyword">for</span> ip <span class="keyword">in</span> `cat ids.txt`;<span class="keyword">do</span> <span class="built_in">rm</span> <span class="operator">-f</span> rdps/<span class="variable">$ip</span>.rdp &amp;&amp; <span class="built_in">cp</span> <span class="operator">-f</span> template.rdp rdps/<span class="variable">$ip</span>.rdp &amp;&amp; dos2unix <span class="operator">-f</span> rdps/<span class="variable">$ip</span>.rdp &amp;&amp; sed <span class="literal">-i</span> <span class="string">&quot;s/LANIP/<span class="variable">$ip</span>/g&quot;</span> rdps/<span class="variable">$ip</span>.rdp;done</span><br><span class="line"><span class="comment"># 查看windows session</span></span><br><span class="line">query session</span><br><span class="line"><span class="comment"># 查看任务和session</span></span><br><span class="line">tasklist</span><br><span class="line"><span class="comment"># 查看服务</span></span><br><span class="line"><span class="built_in">get-service</span></span><br></pre></td></tr></table></figure><h1 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h1><h2 id="Java写的自动化程序不能实现开机自启动"><a href="#Java写的自动化程序不能实现开机自启动" class="headerlink" title="Java写的自动化程序不能实现开机自启动"></a>Java写的自动化程序不能实现开机自启动</h2><p>报错如下：</p><p>org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.</p><p>解决思路：</p><ul><li>配置开机自动登录Windows账户：<a href="https://docs.microsoft.com/en-us/troubleshoot/windows-server/user-profiles-and-logon/turn-on-automatic-logon">https://docs.microsoft.com/en-us/troubleshoot/windows-server/user-profiles-and-logon/turn-on-automatic-logon</a></li><li>使用AlwaysUp自动拉起程序</li><li>配置重启脚本：自动杀死chrome.exe和chromedriver.exe</li><li>批量生成远程桌面连接文件<ul><li>配置不检查Hostkey</li><li>信任未知发行者</li><li>启动后最小化</li></ul></li><li>批量连接rdp远程桌面，一次最多可以连接15个rdp文件</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;p&gt;使用自动化程序模拟用户下单，对SaaS建站前端Web界面进行压力测试&lt;/p&gt;
&lt;h1 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;在EC2提供的Auto Scaling&lt;/li&gt;
&lt;li&gt;自动化程序运行环境：Windows Server 2019&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;制作线上仿真环境：从rds快照中新建实例用于仿真数据库，同时redis也是同样的操作&lt;/li&gt;
&lt;li&gt;制作Windows Server 2019程序镜像，将程序打包在系统镜像中（IAM)，并配置开机自启动&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="测试" scheme="http://blog.ziiyc.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Scoop-Windows包管理器教程</title>
    <link href="http://blog.ziiyc.com/post/scoop-tutorial.html"/>
    <id>http://blog.ziiyc.com/post/scoop-tutorial.html</id>
    <published>2020-12-16T04:00:00.000Z</published>
    <updated>2020-03-16T08:57:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Scoop"><a href="#安装Scoop" class="headerlink" title="安装Scoop"></a>安装Scoop</h2><p><a href="https://scoop.sh/">Scoop官网</a></p><p><a href="https://github.com/lukesampson/scoop">Scoop-Github</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开Powershell(非管理员)</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="literal">-scope</span> CurrentUser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义Scoop安装目录</span></span><br><span class="line"><span class="variable">$env:SCOOP</span>=<span class="string">&#x27;D:\Scoop&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP&#x27;</span>, <span class="variable">$env:SCOOP</span>, <span class="string">&#x27;User&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Scoop命令</span></span><br><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="built_in">iwr</span> <span class="literal">-useb</span> get.scoop.sh | <span class="built_in">iex</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用Scoop安装卸载软件"><a href="#使用Scoop安装卸载软件" class="headerlink" title="使用Scoop安装卸载软件"></a>使用Scoop安装卸载软件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scoop install 7<span class="built_in">zip</span> git-<span class="keyword">with</span>-openssh</span><br><span class="line">scoop uninstall 7<span class="built_in">zip</span> git-<span class="keyword">with</span>-openssh</span><br></pre></td></tr></table></figure><h2 id="使用Scoop添加移除仓库"><a href="#使用Scoop添加移除仓库" class="headerlink" title="使用Scoop添加移除仓库"></a>使用Scoop添加移除仓库</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 查看仓库列表</span></span><br><span class="line">scoop bucket list</span><br><span class="line"><span class="meta"># 查看推荐仓库</span></span><br><span class="line">scoop bucket known</span><br><span class="line"><span class="meta"># 添加推荐仓库</span></span><br><span class="line">scoop bucket <span class="keyword">add</span> extras</span><br><span class="line"><span class="meta"># 添加第三方仓库</span></span><br><span class="line">scoop bucket <span class="keyword">add</span> [bucket-name] [git-repo]</span><br><span class="line">scoop bucket <span class="keyword">add</span> zapps https:<span class="comment">//github.com/kkzzhizhou/scoop-zapps</span></span><br><span class="line"><span class="meta"># 移除仓库</span></span><br><span class="line">scoop bucket rm [bucket-name]</span><br><span class="line">scoop bucket rm extras</span><br></pre></td></tr></table></figure><h2 id="自建软件仓库"><a href="#自建软件仓库" class="headerlink" title="自建软件仓库"></a>自建软件仓库</h2><p><a href="https://github.com/lukesampson/scoop/wiki">官方教程</a></p><h2 id="合并多个软件仓库"><a href="#合并多个软件仓库" class="headerlink" title="合并多个软件仓库"></a>合并多个软件仓库</h2><p><a href="../attachments/28090.sh">mergebucket.sh</a></p><h2 id="软件仓库自动更新"><a href="#软件仓库自动更新" class="headerlink" title="软件仓库自动更新"></a>软件仓库自动更新</h2><p><a href="https://github.com/ScoopInstaller/Excavator">Excavator</a></p><h3 id="使用Docker自动更新"><a href="#使用Docker自动更新" class="headerlink" title="使用Docker自动更新"></a>使用Docker自动更新</h3><ul><li><p>修改项目bin\auto-pr.ps1中是项目名称</p></li><li><p>新建docker-compose.yml文件，内容如下：</p>  <figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">services:</span></span><br><span class="line"><span class="symbol">  bucket:</span></span><br><span class="line"><span class="symbol">    image:</span> r15ch13/excavator:latest</span><br><span class="line"><span class="symbol">    deploy:</span></span><br><span class="line"><span class="symbol">      mode:</span> global <span class="meta"># creates only one container</span></span><br><span class="line"><span class="symbol">    volumes:</span></span><br><span class="line">      - <span class="keyword">/usr/</span>local<span class="keyword">/scoop/</span>.ssh:<span class="keyword">/root/</span>.ssh</span><br><span class="line">      - <span class="keyword">/usr/</span>local<span class="keyword">/scoop/</span>log:<span class="keyword">/root/</span>log</span><br><span class="line"><span class="symbol">    environment:</span></span><br><span class="line"><span class="symbol">      GIT_USERNAME:</span> <span class="string">&quot;xxx&quot;</span></span><br><span class="line"><span class="symbol">      GIT_EMAIL:</span> <span class="string">&quot;xxx@gmail.com&quot;</span></span><br><span class="line"><span class="symbol">      BUCKET:</span> <span class="string">&quot;xxx/xxx&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>修改environment中的变量</p></li><li><p>修改volumes中.ssh映射目录，将私钥放入.ssh目录中</p></li><li><p>启动Docker</p>  <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">screen </span>-S <span class="keyword">scoop</span></span><br><span class="line"><span class="keyword"></span>docker-compose up</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装Scoop&quot;&gt;&lt;a href=&quot;#安装Scoop&quot; class=&quot;headerlink&quot; title=&quot;安装Scoop&quot;&gt;&lt;/a&gt;安装Scoop&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://scoop.sh/&quot;&gt;Scoop官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a </summary>
      
    
    
    
    
    <category term="包管理器" scheme="http://blog.ziiyc.com/tags/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>VSCode使用Github作为图床</title>
    <link href="http://blog.ziiyc.com/post/vscode-use-github-as-pic-bed.html"/>
    <id>http://blog.ziiyc.com/post/vscode-use-github-as-pic-bed.html</id>
    <published>2020-04-05T04:47:00.000Z</published>
    <updated>2020-04-05T06:29:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>使用VSCode插件PicGo上传图片至Github博客（比如kkzzhizho.github.io)的images分支。</p><h2 id="博客仓库原先状态"><a href="#博客仓库原先状态" class="headerlink" title="博客仓库原先状态"></a>博客仓库原先状态</h2><p>一共有两个分支：source（博客源文件）和master（Hexo博客生成文件)</p><span id="more"></span> <h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><h3 id="新建一个远程空白分支：images"><a href="#新建一个远程空白分支：images" class="headerlink" title="新建一个远程空白分支：images"></a>新建一个远程空白分支：images</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将项目克隆到本地</span></span><br><span class="line">git <span class="built_in">clone</span> xxx</span><br><span class="line"><span class="built_in">cd</span> xxx</span><br><span class="line"><span class="comment"># 新建一个空白images</span></span><br><span class="line">git checkout --orphan images</span><br><span class="line"><span class="comment"># 清空当前项目</span></span><br><span class="line">git <span class="built_in">rm</span> -rf .</span><br><span class="line"><span class="comment"># 新建一个README.md文件（因为分支文件为空时不能推送到远端）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is a imgaes branch&quot;</span> &gt; README&gt;.md</span><br><span class="line"><span class="comment"># 提交到远端</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;Initial images branch&quot;</span></span><br><span class="line">git push origin images</span><br></pre></td></tr></table></figure><h3 id="安装并配置VSCode插件：PicGo"><a href="#安装并配置VSCode插件：PicGo" class="headerlink" title="安装并配置VSCode插件：PicGo"></a>安装并配置VSCode插件：PicGo</h3><ol><li>安装PicGo插件</li></ol><p>需要用到Picgo这个插件，直接在vscode中搜索安装就行。</p><ol start="2"><li>配置PicGo插件</li></ol><p><img src="https://blog.ziiyc.com/images/eb70ad7545dc3a2b8a61fd144ca3aa2a_MD5.png" alt="vscode-use-github-as-pic-bed-1.png"></p><ol start="3"><li>申请Github Token</li></ol><p><img src="https://blog.ziiyc.com/images/9b0adcbebc5e660a712b937743aa0f17_MD5.png" alt="vscode-use-github-as-pic-bed-2.png"></p><p><img src="https://blog.ziiyc.com/images/79b9302ca83fcfa195c5084d23fd118b_MD5.png" alt="vscode-use-github-as-pic-bed-3.png"></p><p><img src="https://blog.ziiyc.com/images/0f0574f5d08dd599be1bd75f3918f85c_MD5.png" alt="vscode-use-github-as-pic-bed-4.png"></p><p><img src="https://blog.ziiyc.com/images/852282b79f9ff8b204e1a088a0a0d4f4_MD5.png" alt="vscode-use-github-as-pic-bed-5.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;最终效果&quot;&gt;&lt;a href=&quot;#最终效果&quot; class=&quot;headerlink&quot; title=&quot;最终效果&quot;&gt;&lt;/a&gt;最终效果&lt;/h2&gt;&lt;p&gt;使用VSCode插件PicGo上传图片至Github博客（比如kkzzhizho.github.io)的images分支。&lt;/p&gt;
&lt;h2 id=&quot;博客仓库原先状态&quot;&gt;&lt;a href=&quot;#博客仓库原先状态&quot; class=&quot;headerlink&quot; title=&quot;博客仓库原先状态&quot;&gt;&lt;/a&gt;博客仓库原先状态&lt;/h2&gt;&lt;p&gt;一共有两个分支：source（博客源文件）和master（Hexo博客生成文件)&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://blog.ziiyc.com/categories/Hexo/"/>
    
    
    <category term="图床" scheme="http://blog.ziiyc.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>VSCode使用Github作为图床</title>
    <link href="http://blog.ziiyc.com/post/vscode-use-github-as-pic-bed.html"/>
    <id>http://blog.ziiyc.com/post/vscode-use-github-as-pic-bed.html</id>
    <published>2020-04-05T04:47:00.000Z</published>
    <updated>2020-04-05T06:29:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>使用VSCode插件PicGo上传图片至Github博客（比如kkzzhizho.github.io)的images分支。</p><h2 id="博客仓库原先状态"><a href="#博客仓库原先状态" class="headerlink" title="博客仓库原先状态"></a>博客仓库原先状态</h2><p>一共有两个分支：source（博客源文件）和master（Hexo博客生成文件)</p><span id="more"></span> <h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><h3 id="新建一个远程空白分支：images"><a href="#新建一个远程空白分支：images" class="headerlink" title="新建一个远程空白分支：images"></a>新建一个远程空白分支：images</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将项目克隆到本地</span></span><br><span class="line">git <span class="built_in">clone</span> xxx</span><br><span class="line"><span class="built_in">cd</span> xxx</span><br><span class="line"><span class="comment"># 新建一个空白images</span></span><br><span class="line">git checkout --orphan images</span><br><span class="line"><span class="comment"># 清空当前项目</span></span><br><span class="line">git <span class="built_in">rm</span> -rf .</span><br><span class="line"><span class="comment"># 新建一个README.md文件（因为分支文件为空时不能推送到远端）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is a imgaes branch&quot;</span> &gt; README&gt;.md</span><br><span class="line"><span class="comment"># 提交到远端</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;Initial images branch&quot;</span></span><br><span class="line">git push origin images</span><br></pre></td></tr></table></figure><h3 id="安装并配置VSCode插件：PicGo"><a href="#安装并配置VSCode插件：PicGo" class="headerlink" title="安装并配置VSCode插件：PicGo"></a>安装并配置VSCode插件：PicGo</h3><ol><li>安装PicGo插件</li></ol><p>需要用到Picgo这个插件，直接在vscode中搜索安装就行。</p><ol start="2"><li>配置PicGo插件</li></ol><p><img src="https://blog.ziiyc.com/images/eb70ad7545dc3a2b8a61fd144ca3aa2a_MD5.png" alt="vscode-use-github-as-pic-bed-1.png"></p><ol start="3"><li>申请Github Token</li></ol><p><img src="https://blog.ziiyc.com/images/9b0adcbebc5e660a712b937743aa0f17_MD5.png" alt="vscode-use-github-as-pic-bed-2.png"></p><p><img src="https://blog.ziiyc.com/images/79b9302ca83fcfa195c5084d23fd118b_MD5.png" alt="vscode-use-github-as-pic-bed-3.png"></p><p><img src="https://blog.ziiyc.com/images/0f0574f5d08dd599be1bd75f3918f85c_MD5.png" alt="vscode-use-github-as-pic-bed-4.png"></p><p><img src="https://blog.ziiyc.com/images/852282b79f9ff8b204e1a088a0a0d4f4_MD5.png" alt="vscode-use-github-as-pic-bed-5.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;最终效果&quot;&gt;&lt;a href=&quot;#最终效果&quot; class=&quot;headerlink&quot; title=&quot;最终效果&quot;&gt;&lt;/a&gt;最终效果&lt;/h2&gt;&lt;p&gt;使用VSCode插件PicGo上传图片至Github博客（比如kkzzhizho.github.io)的images分支。&lt;/p&gt;
&lt;h2 id=&quot;博客仓库原先状态&quot;&gt;&lt;a href=&quot;#博客仓库原先状态&quot; class=&quot;headerlink&quot; title=&quot;博客仓库原先状态&quot;&gt;&lt;/a&gt;博客仓库原先状态&lt;/h2&gt;&lt;p&gt;一共有两个分支：source（博客源文件）和master（Hexo博客生成文件)&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://blog.ziiyc.com/categories/Hexo/"/>
    
    
    <category term="图床" scheme="http://blog.ziiyc.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>Windows中硬链接、软链接、符号链接区别与使用场景</title>
    <link href="http://blog.ziiyc.com/post/windows-links.html"/>
    <id>http://blog.ziiyc.com/post/windows-links.html</id>
    <published>2020-03-17T09:35:30.000Z</published>
    <updated>2020-03-17T10:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li><p>硬链接：Hard Link, 只适用于文件<br>适用条件：NTFS文件系统,不能跨盘符,使用绝对路径<br>使用效果：硬链接文件与目标文件必须位于同一volume,删除硬链接文件，不影响目标文件,删除目标文件，不影响硬链接文件(此时硬链接会保留目标文件的副本),当移动目标文件时，硬链接会重新指向新路径。</p></li><li><p>软链接：只用适用于目录<br>适用条件：NTFS文件系统,不能跨主机,使用绝对路径<br>使用效果：删除软链接，不影响目标文件夹,删除目标文件夹，软链接失效</p></li><li><p>符号链接：支持目录和文件<br>适用条件：NTFS文件系统，支持相对路径,支持UNC路径、网络驱动器。<br>使用效果：删除符号链接(文件或者目录)，不影响目标(文件或者目录),删除目标(文件或者目录),符号链接失效</p></li></ul><span id="more"></span> <h2 id="CMD实现"><a href="#CMD实现" class="headerlink" title="CMD实现"></a>CMD实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">; 创建硬链接</span><br><span class="line">mklink /H 硬链接文件 目标文件</span><br><span class="line">; 创建软链接</span><br><span class="line">mklink /j 软链接文件夹 目标文件夹</span><br><span class="line">; 创建符号链接</span><br><span class="line">mklink 符号链接文件或文件夹 目标文件或文件夹</span><br></pre></td></tr></table></figure><h2 id="PowerShell实现"><a href="#PowerShell实现" class="headerlink" title="PowerShell实现"></a>PowerShell实现</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 创建硬链接</span></span><br><span class="line">New-Item -ItemType HardLink -Path 硬链接文件所在目录 -Name 硬链接文件名 -Target 目标文件全路径<span class="string">&quot;</span></span><br><span class="line"><span class="meta"># 创建软链接</span></span><br><span class="line">New-Item -ItemType Junction -Path 软链接文件夹 -Value 目标文件夹</span><br><span class="line"><span class="meta"># 创建符号链接</span></span><br><span class="line">New-Item -ItemType SymbolicLink -Path 符号链接文件或文件夹  -Value 目标文件或文件夹</span><br></pre></td></tr></table></figure><h2 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h2><ul><li>硬链接：在scoop包管理器中大量使用,个人不常用</li><li>软链接：在不改变配置的情况下，将文件夹同步至OneDrive</li><li>符号链接：在不改变配置的情况下，将文件同步至OneDrive</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;硬链接：Hard Link, 只适用于文件&lt;br&gt;适用条件：NTFS文件系统,不能跨盘符,使用绝对路径&lt;br&gt;使用效果：硬链接文件与目标文件必须位于同一volume,删除硬链接文件，不影响目标文件,删除目标文件，不影响硬链接文件(此时硬链接会保留目标文件的副本),当移动目标文件时，硬链接会重新指向新路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;软链接：只用适用于目录&lt;br&gt;适用条件：NTFS文件系统,不能跨主机,使用绝对路径&lt;br&gt;使用效果：删除软链接，不影响目标文件夹,删除目标文件夹，软链接失效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;符号链接：支持目录和文件&lt;br&gt;适用条件：NTFS文件系统，支持相对路径,支持UNC路径、网络驱动器。&lt;br&gt;使用效果：删除符号链接(文件或者目录)，不影响目标(文件或者目录),删除目标(文件或者目录),符号链接失效&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://blog.ziiyc.com/categories/Windows/"/>
    
    
    <category term="文件系统" scheme="http://blog.ziiyc.com/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Home Assistant+小度智能音箱实现远程控制家电</title>
    <link href="http://blog.ziiyc.com/post/home-assistent-with-xiaodu-smart-speaker.html"/>
    <id>http://blog.ziiyc.com/post/home-assistent-with-xiaodu-smart-speaker.html</id>
    <published>2020-03-16T09:47:25.000Z</published>
    <updated>2020-03-16T09:47:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在联通营业厅更换宽带套餐时加钱买了个小度智能音箱，从一开始只是查查天气、放放歌，我现在它做得更多一些，比如说本篇教程提到的控制家里的电器。</p><span id="more"></span> <h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>群晖DSM使用Docker下载安装homeassistant/home-assistant</li><li>购买小米米家智能插座插头WiFi版</li></ul><h2 id="Home-Assistant配置步骤"><a href="#Home-Assistant配置步骤" class="headerlink" title="Home Assistant配置步骤"></a>Home Assistant配置步骤</h2><p><img src="https://blog.ziiyc.com/images/95e83d3582b3e94c21d827ed1c4b4edf_MD5.png" alt="home-assistent-with-xiaodu-smart-speaker-1.png"></p><p><img src="https://blog.ziiyc.com/images/2d0bc75b6142f83bf0ae18d97bb4ceb1_MD5.png" alt="home-assistent-with-xiaodu-smart-speaker-2.png"></p><p><img src="https://blog.ziiyc.com/images/cc068b923f150eaddae000c6b5b7bf76_MD5.png" alt="home-assistent-with-xiaodu-smart-speaker-3.png"></p><p><img src="https://blog.ziiyc.com/images/ac99c03619d14c813369e09205f0f8fe_MD5.png" alt="home-assistent-with-xiaodu-smart-speaker-4.png"></p><p><img src="https://blog.ziiyc.com/images/03996497107573645cac0a39ab019178_MD5.png" alt="home-assistent-with-xiaodu-smart-speaker-5.png"></p><p>应用后启动即可,配置界面连接为<a href="http://nas_ip:8123/">http://nas_ip:8123</a></p><h2 id="扩展：公网Https方式访问Haome-Aassistant"><a href="#扩展：公网Https方式访问Haome-Aassistant" class="headerlink" title="扩展：公网Https方式访问Haome Aassistant"></a>扩展：公网Https方式访问Haome Aassistant</h2><p>如果需要在公网中使用Home Assistant,可以使用内网穿透工具frp。Home Assistant默认监听本地8123端口,使用Websocket连接。</p><h3 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> hass.domain.com; <span class="comment"># 修改domain为你自定义的域名</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span>       /etc/nginx/ssl/domain.com.key.pem; <span class="comment"># 修改domain为你自定义的域名</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>   /etc/nginx/ssl/domain.com.key; <span class="comment"># 修改domain为你自定义的域名</span></span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host  <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:[frp_port]; <span class="comment"># 此处修改为你的frps端口</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="section">location</span> /api/websocket &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:8123;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="frpc配置"><a href="#frpc配置" class="headerlink" title="frpc配置"></a>frpc配置</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[hass-ws]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8123</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">8123</span></span><br><span class="line"></span><br><span class="line"><span class="section">[hass]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8123</span></span><br><span class="line"><span class="attr">custom_domains</span> = hass.domain.com</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://post.smzdm.com/p/amm0g5qd/">哑虎的智能家居路 篇四：小度音箱接入HomeAssistant</a></li></ul><h2 id="智能家居论坛"><a href="#智能家居论坛" class="headerlink" title="智能家居论坛"></a>智能家居论坛</h2><ul><li><a href="https://bbs.hassbian.com/forum.php">https://bbs.hassbian.com/forum.php</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;在联通营业厅更换宽带套餐时加钱买了个小度智能音箱，从一开始只是查查天气、放放歌，我现在它做得更多一些，比如说本篇教程提到的控制家里的电器。&lt;/p&gt;</summary>
    
    
    
    <category term="智能家居" scheme="http://blog.ziiyc.com/categories/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    
    <category term="米家WIFI智能插座" scheme="http://blog.ziiyc.com/tags/%E7%B1%B3%E5%AE%B6WIFI%E6%99%BA%E8%83%BD%E6%8F%92%E5%BA%A7/"/>
    
    <category term="智能家居开源系统" scheme="http://blog.ziiyc.com/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85%E5%BC%80%E6%BA%90%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="群晖DSM" scheme="http://blog.ziiyc.com/tags/%E7%BE%A4%E6%99%96DSM/"/>
    
  </entry>
  
  <entry>
    <title>syncthing实现移动硬盘便携同步至NAS</title>
    <link href="http://blog.ziiyc.com/post/Synchronize-Portable-External-Hard-Drive-With-NAS.html"/>
    <id>http://blog.ziiyc.com/post/Synchronize-Portable-External-Hard-Drive-With-NAS.html</id>
    <published>2020-03-13T09:22:17.000Z</published>
    <updated>2020-03-13T09:22:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><p><img src="https://blog.ziiyc.com/images/f914eb06647f580253d63509f928b76f_MD5.png" alt="Synchronize-Portable-External-Hard-Drive-With-NAS-1.png"></p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>一台黑群晖NAS设备和一个移动硬盘实现在资料自动同步</p><p>先说说传统方式有几种：</p><ul><li>将移动硬盘插入NAS的USB接口，并使用群晖应用USB Copy进行备份(注意：这种方式只能备份至移动硬盘，不能将移动硬盘上的更改同步到NAS中)</li><li>将移动硬盘插入局域网中的Windows设备，并使用samba挂载NAS文件夹，使用类似GoodSync，AllwaySync，SyncFolders等同步软件进行同步。</li></ul><p>我的需求：</p><ul><li>移动硬盘接入任何Windows设备中，在有网络的情况下（可以是局域网，可以是公网），都能直接与NAS中的文件夹进行同步。</li><li>即使移动硬盘在一段时间内不使用（比如说，不接任何设备闲置几天），重新接入网络能继续与NAS中的文件夹进行同步</li></ul><h2 id="可行解决方案：SyncTrayzor-Syncthing-GUI"><a href="#可行解决方案：SyncTrayzor-Syncthing-GUI" class="headerlink" title="可行解决方案：SyncTrayzor(Syncthing GUI)"></a>可行解决方案：SyncTrayzor(Syncthing GUI)</h2><span id="more"></span> <h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><ol><li><p>下载SyncTrayzor Portable版本，解压放置在移动硬盘根目录，命名为Syncthing(可以改成任何你想到的名字)</p></li><li><p>将硬盘盘符修改成一些不常用的的盘符，比方说P盘</p></li><li><p>打开Syncthing文件夹中的SyncTrayzor.exe，将设备名改成移动硬盘的盘符名（最好是有意义的）</p></li><li><p>添加远程设备NAS，去除勾选“作为中介”</p></li><li><p>将移动硬盘中的文件夹同步给ZNAS即可</p></li></ol><h2 id="插入新设备时"><a href="#插入新设备时" class="headerlink" title="插入新设备时"></a>插入新设备时</h2><ul><li>修改移动硬盘盘符为P盘（或者修改配置文件中的[盘符]:\Syncthing\data\syncthing\config.xml中的盘符位置)</li><li>打开SyncTrayzor即可同步</li></ul><h2 id="自动修改盘符脚本"><a href="#自动修改盘符脚本" class="headerlink" title="自动修改盘符脚本"></a>自动修改盘符脚本</h2><ul><li>将以下代码保存成start.ps1后打开即可</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$script_path</span> = <span class="built_in">Split-Path</span> <span class="literal">-Parent</span> <span class="variable">$MyInvocation</span>.MyCommand.Definition</span><br><span class="line"><span class="variable">$config</span> = <span class="string">&quot;<span class="variable">$script_path</span>\data\syncthing\config.xml&quot;</span></span><br><span class="line"><span class="variable">$drive_letter</span> = <span class="variable">$script_path</span>.Split(<span class="string">&#x27;\&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">write-host</span> <span class="string">&quot;正在修改盘符...&quot;</span> </span><br><span class="line"><span class="variable">$xml</span> = <span class="built_in">New-Object</span> <span class="literal">-TypeName</span> XML</span><br><span class="line"><span class="variable">$xml</span>.Load(<span class="variable">$config</span>)</span><br><span class="line"><span class="variable">$node</span>=<span class="variable">$xml</span>.SelectNodes(<span class="string">&quot;/configuration/folder&quot;</span>)</span><br><span class="line"><span class="built_in">write-host</span> <span class="string">&quot;旧盘符为:<span class="variable">$</span>&#123;node.path&#125;&quot;</span> </span><br><span class="line"><span class="variable">$node</span>.SetAttribute(<span class="string">&quot;path&quot;</span>, <span class="variable">$drive_letter</span>)</span><br><span class="line"><span class="built_in">write-host</span> <span class="string">&quot;新盘符为:<span class="variable">$drive_letter</span>&quot;</span></span><br><span class="line"><span class="variable">$xml</span>.Save(<span class="variable">$config</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$</span>?)&#123;</span><br><span class="line">    <span class="built_in">write-host</span> <span class="string">&quot;正在启动SyncTrayzor&quot;</span></span><br><span class="line">    <span class="built_in">Start-Process</span> <span class="variable">$script_path</span>\SyncTrayzor.exe</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;实现效果&quot;&gt;&lt;a href=&quot;#实现效果&quot; class=&quot;headerlink&quot; title=&quot;实现效果&quot;&gt;&lt;/a&gt;实现效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://blog.ziiyc.com/images/f914eb06647f580253d63509f928b76f_MD5.png&quot; alt=&quot;Synchronize-Portable-External-Hard-Drive-With-NAS-1.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;一台黑群晖NAS设备和一个移动硬盘实现在资料自动同步&lt;/p&gt;
&lt;p&gt;先说说传统方式有几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将移动硬盘插入NAS的USB接口，并使用群晖应用USB Copy进行备份(注意：这种方式只能备份至移动硬盘，不能将移动硬盘上的更改同步到NAS中)&lt;/li&gt;
&lt;li&gt;将移动硬盘插入局域网中的Windows设备，并使用samba挂载NAS文件夹，使用类似GoodSync，AllwaySync，SyncFolders等同步软件进行同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移动硬盘接入任何Windows设备中，在有网络的情况下（可以是局域网，可以是公网），都能直接与NAS中的文件夹进行同步。&lt;/li&gt;
&lt;li&gt;即使移动硬盘在一段时间内不使用（比如说，不接任何设备闲置几天），重新接入网络能继续与NAS中的文件夹进行同步&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;可行解决方案：SyncTrayzor-Syncthing-GUI&quot;&gt;&lt;a href=&quot;#可行解决方案：SyncTrayzor-Syncthing-GUI&quot; class=&quot;headerlink&quot; title=&quot;可行解决方案：SyncTrayzor(Syncthing GUI)&quot;&gt;&lt;/a&gt;可行解决方案：SyncTrayzor(Syncthing GUI)&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>使用OneDrive实时同步Ditto剪贴板数据（WebDav）</title>
    <link href="http://blog.ziiyc.com/post/onedrive-sync-ditto.html"/>
    <id>http://blog.ziiyc.com/post/onedrive-sync-ditto.html</id>
    <published>2019-04-30T07:41:29.000Z</published>
    <updated>2020-03-16T06:45:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>最近将常用的绿色软件放到Onedrive中同步，方便在自己的多个Windows设备使用。遇到一个比较棘手的问题，使用Ditto时会锁定数据库文件，此时OneDrive显示文件在使用中，无法同步。</p><span id="more"></span> <h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>使用WebDav连接OneDrive</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>OneDrive使用WebDav的方法：</p><ol><li>访问 <a href="http://onedrive.com/">OneDrive.com</a> ，点击进入任何一个你的文件夹。</li><li>看浏览器上面的地址栏，“cid”后面的一串完整的数字加大写的英文字母叫 special ID（如下图）。</li><li>你的入口链接就是： special ID（如我的就是<a href="https://d.docs.live.net/F399A8134684152B%EF%BC%89%EF%BC%8C%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E5%B0%B1%E6%98%AF%E4%BD%A0%E5%BE%AE%E8%BD%AF%E8%B4%A6%E5%8F%B7%E7%9A%84%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81">https://d.docs.live.net/F399A8134684152B），账号密码就是你微软账号的账号密码</a><ul><li>如果你有<strong>开启两步验证</strong>功能，那么需要在<a href="https://account.live.com/proofs/AppPassword?mkt=en-us">这里去获得一个生成的应用密码</a></li><li>另外要注意的，OneDrive 的 WebDav 接口如同坚果云的一样，传输的文件大小限制在100M以下。</li></ul></li><li>在资源管理器界面中，选择映射网络驱动器，在文件夹一栏，填入上一步得到的地址，点击完成，耐心等候，输入账号密码即可，之后可以将这个映射得到的盘符当作本地磁盘进行使用</li></ol><p>连接后如下图所示，打开即为你网盘的文件</p><p><img src="https://blog.ziiyc.com/images/e50d37e41deb7aee0a96a29f9d91ed60_MD5.jpg" alt="onedrive-sync-ditto-1.jpg"></p><p>Ditto设置如下图所示，数据库使用WebDav路径即可完美解决数据同步问题</p><p><img src="https://blog.ziiyc.com/images/a3f64609e0d33a8d2db9dd9861a1fdde_MD5.jpg" alt="onedrive-sync-ditto-2.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;最近将常用的绿色软件放到Onedrive中同步，方便在自己的多个Windows设备使用。遇到一个比较棘手的问题，使用Ditto时会锁定数据库文件，此时OneDrive显示文件在使用中，无法同步。&lt;/p&gt;</summary>
    
    
    
    
    <category term="webdav应用" scheme="http://blog.ziiyc.com/tags/webdav%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>推荐跨平台PDF,网页标注-Weave</title>
    <link href="http://blog.ziiyc.com/post/weave.html"/>
    <id>http://blog.ziiyc.com/post/weave.html</id>
    <published>2019-04-20T05:54:43.000Z</published>
    <updated>2019-04-20T05:54:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>安卓平板（电容屏）</li><li>Yandex浏览器（从Google Play下载，需科学上网）</li><li>Weava Highlighter（从Chrome Webstore下载安装，需科学上网）</li><li>电容笔（主动式体验更好些，更接近笔的体验，需要充电）</li></ul><span id="more"></span> <h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="网页文字颜色标注"><a href="#网页文字颜色标注" class="headerlink" title="网页文字颜色标注"></a>网页文字颜色标注</h3><ul><li>选中一段文字，这时候并不会出现Weava的标注工具</li><li>在网页任意位置滑动就会出现标注工具，如下图所示</li></ul><p><img src="https://blog.ziiyc.com/images/971af1811e08020c2dba0c9d686aa49f_MD5.jpg" alt="weave-1.jpg"></p><h3 id="标注和浏览器菜单重叠的解决方法"><a href="#标注和浏览器菜单重叠的解决方法" class="headerlink" title="标注和浏览器菜单重叠的解决方法"></a>标注和浏览器菜单重叠的解决方法</h3><ul><li>在出现标注工具后，将页面向上滑动即可，如下图所示</li></ul><p><img src="https://blog.ziiyc.com/images/788b2f6bf7a68dc875f2c1358d46699f_MD5.jpg" alt="weave-2.jpg"></p><h3 id="网页文字添加注释"><a href="#网页文字添加注释" class="headerlink" title="网页文字添加注释"></a>网页文字添加注释</h3><ul><li>在颜色标注后，只需要再次点击该文字就会出现添加注释，如下图所示</li></ul><p><img src="https://blog.ziiyc.com/images/ae9222e997225cbc850c6b5b85ee465a_MD5.jpg" alt="weave-3.jpg"></p><h3 id="为不同的颜色添加颜色注释"><a href="#为不同的颜色添加颜色注释" class="headerlink" title="为不同的颜色添加颜色注释"></a>为不同的颜色添加颜色注释</h3><ul><li>在文字标注界面选择设置按钮即可</li></ul><p><img src="https://blog.ziiyc.com/images/880f86959fc6a99d10ce8a166186cd17_MD5.jpg" alt="weave-4.jpg"></p><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2><p><img src="https://blog.ziiyc.com/images/40018c0939daf487454facb3ea67db76_MD5.jpg" alt="weave-5.jpg"></p><p><img src="https://blog.ziiyc.com/images/67f96193ffab6e3e3f01a7899ff8eb19_MD5.jpg" alt="weave-6.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;准备工具&quot;&gt;&lt;a href=&quot;#准备工具&quot; class=&quot;headerlink&quot; title=&quot;准备工具&quot;&gt;&lt;/a&gt;准备工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安卓平板（电容屏）&lt;/li&gt;
&lt;li&gt;Yandex浏览器（从Google Play下载，需科学上网）&lt;/li&gt;
&lt;li&gt;Weava Highlighter（从Chrome Webstore下载安装，需科学上网）&lt;/li&gt;
&lt;li&gt;电容笔（主动式体验更好些，更接近笔的体验，需要充电）&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="效率工具" scheme="http://blog.ziiyc.com/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="阅读辅助" scheme="http://blog.ziiyc.com/tags/%E9%98%85%E8%AF%BB%E8%BE%85%E5%8A%A9/"/>
    
  </entry>
  
  <entry>
    <title>CMD、Powershell、Bash终端配置走代理</title>
    <link href="http://blog.ziiyc.com/post/shell-use-proxy.html"/>
    <id>http://blog.ziiyc.com/post/shell-use-proxy.html</id>
    <published>2019-04-19T02:12:06.000Z</published>
    <updated>2019-10-11T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">;; 设置代理(其中sock5可以设置为http，https)</span><br><span class="line"><span class="built_in">set</span> <span class="attribute">http_proxy</span>=<span class="string">&quot;sock5://127.0.0.1:1080&quot;</span></span><br><span class="line"><span class="built_in">set</span> <span class="attribute">https_proxy</span>=<span class="string">&quot;sock5://127.0.0.1:1080&quot;</span></span><br><span class="line">;; 清除代理设置</span><br><span class="line"><span class="built_in">set</span> http_proxy=</span><br><span class="line"><span class="built_in">set</span> https_proxy=</span><br></pre></td></tr></table></figure><span id="more"></span> <h2 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NOTE: registry keys for IE 8, may vary for other versions</span></span><br><span class="line"><span class="variable">$regPath</span> = <span class="string">&#x27;HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings&#x27;</span></span><br><span class="line"><span class="comment"># 清除代理设置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Clear-Proxy</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Set-ItemProperty</span> <span class="literal">-Path</span> <span class="variable">$regPath</span> <span class="literal">-Name</span> ProxyEnable <span class="literal">-Value</span> <span class="number">0</span></span><br><span class="line">    <span class="built_in">Set-ItemProperty</span> <span class="literal">-Path</span> <span class="variable">$regPath</span> <span class="literal">-Name</span> ProxyServer <span class="literal">-Value</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">Set-ItemProperty</span> <span class="literal">-Path</span> <span class="variable">$regPath</span> <span class="literal">-Name</span> ProxyOverride <span class="literal">-Value</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    [<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;http_proxy&#x27;</span>, <span class="variable">$null</span>, <span class="string">&#x27;User&#x27;</span>)</span><br><span class="line">    [<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;https_proxy&#x27;</span>, <span class="variable">$null</span>, <span class="string">&#x27;User&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 设置代理</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Set-Proxy</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$proxy</span> = <span class="string">&#x27;sock5://127.0.0.1:1080&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Set-ItemProperty</span> <span class="literal">-Path</span> <span class="variable">$regPath</span> <span class="literal">-Name</span> ProxyEnable <span class="literal">-Value</span> <span class="number">1</span></span><br><span class="line">    <span class="built_in">Set-ItemProperty</span> <span class="literal">-Path</span> <span class="variable">$regPath</span> <span class="literal">-Name</span> ProxyServer <span class="literal">-Value</span> <span class="variable">$proxy</span></span><br><span class="line">    <span class="built_in">Set-ItemProperty</span> <span class="literal">-Path</span> <span class="variable">$regPath</span> <span class="literal">-Name</span> ProxyOverride <span class="literal">-Value</span> <span class="string">&#x27;&lt;local&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">    [<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;http_proxy&#x27;</span>, <span class="variable">$proxy</span>, <span class="string">&#x27;User&#x27;</span>)</span><br><span class="line">    [<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;https_proxy&#x27;</span>, <span class="variable">$proxy</span>, <span class="string">&#x27;User&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ALL_PROXY=<span class="string">&quot;socks5://127.0.0.1:1080&quot;</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://127.0.0.1:1080&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://127.0.0.1:1080&quot;</span></span><br></pre></td></tr></table></figure><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>如果代理服务器需要登陆，这时可以直接把用户名和密码写进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http_proxy=http://userName:password@proxyAddress:port</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;CMD&quot;&gt;&lt;a href=&quot;#CMD&quot; class=&quot;headerlink&quot; title=&quot;CMD&quot;&gt;&lt;/a&gt;CMD&lt;/h2&gt;&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;;; 设置代理(其中sock5可以设置为http，https)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;http_proxy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;sock5://127.0.0.1:1080&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;https_proxy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;sock5://127.0.0.1:1080&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; 清除代理设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; http_proxy=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; https_proxy=&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Windows代码编辑器选择-VSCode</title>
    <link href="http://blog.ziiyc.com/post/vscode.html"/>
    <id>http://blog.ziiyc.com/post/vscode.html</id>
    <published>2019-04-14T07:12:00.000Z</published>
    <updated>2020-03-13T08:37:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h2><h3 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h3><p>优点：</p><ul><li>界面美观</li><li>扩展强大</li><li>代码高亮</li><li>启动速度快</li></ul><p>缺点：</p><ul><li>AHK中文无法对齐</li><li>Alt多选需要在设置中设置为Ctrl/Command，体验极差</li></ul><h3 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad++"></a>Notepad++</h3><p>缺点：</p><ul><li>界面不美观</li><li>文件不能自动关联</li></ul><h3 id="Sublime-Text-3"><a href="#Sublime-Text-3" class="headerlink" title="Sublime Text 3"></a>Sublime Text 3</h3><p>缺点：</p><ul><li>Windows不支持Alt多选</li><li>闭源</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Windows平台&quot;&gt;&lt;a href=&quot;#Windows平台&quot; class=&quot;headerlink&quot; title=&quot;Windows平台&quot;&gt;&lt;/a&gt;Windows平台&lt;/h2&gt;&lt;h3 id=&quot;VSCode&quot;&gt;&lt;a href=&quot;#VSCode&quot; class=&quot;head</summary>
      
    
    
    
    <category term="编程" scheme="http://blog.ziiyc.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>AutoHotkey在热键体验不好的地方总结</title>
    <link href="http://blog.ziiyc.com/post/fuck-ahk.html"/>
    <id>http://blog.ziiyc.com/post/fuck-ahk.html</id>
    <published>2019-04-14T06:02:39.000Z</published>
    <updated>2019-04-14T06:02:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最开始的想法"><a href="#最开始的想法" class="headerlink" title="最开始的想法"></a>最开始的想法</h2><ul><li>长按字母键打开常用应用，不影响字母输入</li><li>长按鼠标中键打开指定应用，不影响鼠标中键原有功能</li><li>双击Alt唤醒Wox，不影响Alt原有功能</li></ul><h2 id="失败后的备选方案"><a href="#失败后的备选方案" class="headerlink" title="失败后的备选方案"></a>失败后的备选方案</h2><ul><li>使用RShift + 字母打开常用应用</li><li>使用Wgesture，定义按下鼠标右键+单击鼠标左键打开指定应用（已实现）</li><li>使用Capslock + F发送Alt+Space，实现唤醒Wox（已实现）</li></ul><span id="more"></span> <h2 id="意外收获"><a href="#意外收获" class="headerlink" title="意外收获"></a>意外收获</h2><p>发现火萤酱快捷键能够设置双击Alt来唤醒，这就说明用其他语言能够完美的实现双击热键。</p><h2 id="无效例子1：长按字母键影响输入"><a href="#无效例子1：长按字母键影响输入" class="headerlink" title="无效例子1：长按字母键影响输入"></a>无效例子1：长按字母键影响输入</h2><p>来源：<a href="https://www.autohotkey.com/boards/viewtopic.php?f=28&t=6082">仅长按单键执行功能，不影响短按示例</a></p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;示例代码</span></span><br><span class="line"><span class="title">$t::</span></span><br><span class="line"><span class="built_in">KeyWait,</span> t</span><br><span class="line">If (<span class="built_in">A_TimeSinceThisHotkey</span> &gt; <span class="number">300</span>)</span><br><span class="line"><span class="built_in">SetTimer,</span> mainp, -<span class="number">1</span></span><br><span class="line">Else</span><br><span class="line"><span class="built_in">SendInput,</span> % GetKeyState(<span class="string">&quot;CapsLock&quot;</span>, <span class="string">&quot;T&quot;</span>) ? <span class="string">&quot;T&quot;</span> : <span class="string">&quot;t&quot;</span></span><br><span class="line"><span class="keyword">Return</span></span><br><span class="line"></span><br><span class="line"><span class="title">mainp:</span></span><br><span class="line"><span class="built_in">Run,</span> http://www.baidu.com</span><br><span class="line"><span class="keyword">Return</span></span><br></pre></td></tr></table></figure><p>从功能上我们是希望达到以下效果：</p><ul><li>当单击时，输入小写字母t，如果有大写锁定，则输入大写字母T</li><li>当长按时，执行打开百度的操作</li></ul><p>但实际这有许多体验很差的地方，比如：</p><ul><li>当我打字比较快的时候，输入tf，结果输入的是ft，是因为t需要等待时间处理才会输出。</li></ul><h2 id="在对以上代码改造后"><a href="#在对以上代码改造后" class="headerlink" title="在对以上代码改造后"></a>在对以上代码改造后</h2><figure class="highlight ahk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;在对以上代码改造后</span></span><br><span class="line"><span class="title">$MButton::</span></span><br><span class="line"><span class="built_in">KeyWait,</span> MButton</span><br><span class="line">If (<span class="built_in">A_TimeSinceThisHotkey</span> &gt; <span class="number">300</span>)</span><br><span class="line"><span class="built_in">SetTimer,</span> mainp, -<span class="number">1</span></span><br><span class="line">Else</span><br><span class="line"><span class="built_in">Click,</span> M</span><br><span class="line"><span class="keyword">Return</span></span><br><span class="line"></span><br><span class="line"><span class="title">mainp:</span></span><br><span class="line"><span class="built_in">Send,</span> &#123;F3&#125;</span><br><span class="line"><span class="keyword">Return</span></span><br></pre></td></tr></table></figure><p>这代码不能正常工作，我希望长按中键时打开指定应用，单击时执行中键原来的功能，结果是长按鼠标中键能打开指定应用，但无法正常使用鼠标中键</p><h2 id="无效例子2：按键双击检测"><a href="#无效例子2：按键双击检测" class="headerlink" title="无效例子2：按键双击检测"></a>无效例子2：按键双击检测</h2><p> 来源:<a href="https://autohotkey.com/boards/viewtopic.php?t=4286">热键的次数与时长- AutoHotkey Community</a></p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;修改原来的RControl为LAlt</span></span><br><span class="line">intInterval := <span class="number">500</span> <span class="comment">; 若两次连击在这个时间间隔中，则视为双击。</span></span><br><span class="line"><span class="title">~LAlt::</span></span><br><span class="line">if (<span class="built_in">A_PriorHotkey</span> &lt;&gt; <span class="string">&quot;~LAlt&quot;</span> <span class="literal">or</span> <span class="built_in">A_TimeSincePriorHotkey</span> &gt; intInterval)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">    KeyWait,</span> LAlt</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">MsgBox,</span> 您双击了左边的 LAlt 键。</span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></table></figure><p>功能是希望双击左边的Alt执行打开，但问题是在编辑器长按Alt多选会出现鬼畜现象，影响Alt多行编辑的使用。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">;修改原来的#c为LAlt</span><br><span class="line">LAlt::</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">int</span>Count &gt; <span class="number">0</span>) ; SetTimer 已经启动，这里记录键击。</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span>Count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>Count = <span class="number">1</span></span><br><span class="line">SetTimer, KeyWinC, <span class="number">400</span> ; 在 <span class="number">400</span> 毫秒内等待更多的键击。</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">KeyWinC:</span><br><span class="line">SetTimer, KeyWinC, off</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">int</span>Count = <span class="number">1</span>) ; 此键按下了一次。</span><br><span class="line">&#123;</span><br><span class="line">    Run, m:\</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">int</span>Count = <span class="number">2</span>) ; 此键按下了两次。</span><br><span class="line">&#123;</span><br><span class="line">    Run, m:\multimedia</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">int</span>Count &gt; <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">    MsgBox, 连击了三次或更多。</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span>Count = <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></table></figure><p>运行后会使用原来的Alt功能失效，比如Alt+Tab无法使用。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;最开始的想法&quot;&gt;&lt;a href=&quot;#最开始的想法&quot; class=&quot;headerlink&quot; title=&quot;最开始的想法&quot;&gt;&lt;/a&gt;最开始的想法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;长按字母键打开常用应用，不影响字母输入&lt;/li&gt;
&lt;li&gt;长按鼠标中键打开指定应用，不影响鼠标中键原有功能&lt;/li&gt;
&lt;li&gt;双击Alt唤醒Wox，不影响Alt原有功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;失败后的备选方案&quot;&gt;&lt;a href=&quot;#失败后的备选方案&quot; class=&quot;headerlink&quot; title=&quot;失败后的备选方案&quot;&gt;&lt;/a&gt;失败后的备选方案&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用RShift + 字母打开常用应用&lt;/li&gt;
&lt;li&gt;使用Wgesture，定义按下鼠标右键+单击鼠标左键打开指定应用（已实现）&lt;/li&gt;
&lt;li&gt;使用Capslock + F发送Alt+Space，实现唤醒Wox（已实现）&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="效率提升" scheme="http://blog.ziiyc.com/categories/%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/"/>
    
    
    <category term="AHK,Hotkey" scheme="http://blog.ziiyc.com/tags/AHK-Hotkey/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next功能及个性化配置</title>
    <link href="http://blog.ziiyc.com/post/next-config.html"/>
    <id>http://blog.ziiyc.com/post/next-config.html</id>
    <published>2019-03-16T09:14:42.000Z</published>
    <updated>2020-03-16T07:12:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Travis-CI持续集成"><a href="#Travis-CI持续集成" class="headerlink" title="Travis CI持续集成"></a><a href="https://kkzzhizhou.github.io/2019/03/16/Hexo%E4%BD%BF%E7%94%A8Travis%20CI%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/">Travis CI持续集成</a></h2><span id="more"></span> <h2 id="RSS-Feed"><a href="#RSS-Feed" class="headerlink" title="RSS Feed"></a>RSS Feed</h2><ul><li><p>安装插件<code>generator-feed</code></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install generator-feed <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li><p>修改站点配置</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Extensions</span></span><br><span class="line"><span class="meta">## Plugins: http:<span class="comment">//hexo.io/plugins/</span></span></span><br><span class="line"><span class="meta">#RSS订阅</span></span><br><span class="line"><span class="symbol">plugin:</span></span><br><span class="line">- generator-feed</span><br><span class="line"><span class="meta">#Feed Atom</span></span><br><span class="line"><span class="symbol">feed:</span></span><br><span class="line"><span class="symbol">type:</span> atom</span><br><span class="line"><span class="symbol">path:</span> atom.xml</span><br><span class="line"><span class="symbol">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></li><li><h3 id="修改主题配置，添加如下配置"><a href="#修改主题配置，添加如下配置" class="headerlink" title="修改主题配置，添加如下配置"></a>修改主题配置，添加如下配置</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">rss:</span> /atom.xml</span><br></pre></td></tr></table></figure></li></ul><h2 id="站内全文搜索"><a href="#站内全文搜索" class="headerlink" title="站内全文搜索"></a>站内全文搜索</h2><ul><li><p>安装 <code>generator-searchdb</code>，在站点的根目录下执行以下命令：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install generator-searchdb <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li><p>编辑 站点配置文件，新增以下内容到任意位置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">search:</span></span><br><span class="line"><span class="symbol">  path:</span> search.xml</span><br><span class="line"><span class="symbol">  field:</span> post</span><br><span class="line"><span class="symbol">  format:</span> html</span><br><span class="line"><span class="symbol">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li><li><p>编辑 主题配置文件，启用本地搜索功能：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="文章按更新时间排序"><a href="#文章按更新时间排序" class="headerlink" title="文章按更新时间排序"></a>文章按更新时间排序</h2><h3 id="要修改的内容"><a href="#要修改的内容" class="headerlink" title="要修改的内容"></a>要修改的内容</h3><ul><li><p><code>/node_modules/generator-index/index.js</code></p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order<span class="number">_</span><span class="meta">by</span>: <span class="string">&#x27;-date&#x27;</span></span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order<span class="number">_</span><span class="meta">by</span>: <span class="string">&#x27;-updated&#x27;</span></span><br></pre></td></tr></table></figure><p>这样的话就<strong>只</strong>按 Front-matter 中的<code>updated</code>排序了，因此所有文章的 Front-matter 中都必须要有<code>updated</code>，已发布的文章可以手动修改或者找方法批量将 <code>data</code>换成<code>updated</code>，对于将来的文章，只要做如下修改：</p><ul><li><code>/scaffolds/post.md</code></li></ul><p>在<code>date</code>后加入一行</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">updated: </span><span class="template-variable">&#123;&#123; <span class="name">date</span> &#125;&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Hexo链接持久化"><a href="#Hexo链接持久化" class="headerlink" title="Hexo链接持久化"></a>Hexo链接持久化</h2><ul><li> 安装<code>abbrlink</code>这个插件</li></ul>  <figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install abbrlink <span class="comment">--save</span></span><br></pre></td></tr></table></figure><ul><li><p>站点配置文件里:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">permalink:</span> post/:abbrlink.html</span><br><span class="line"><span class="symbol">abbrlink:</span></span><br><span class="line"><span class="symbol">  alg:</span> crc32  <span class="meta"># 算法：crc16(default) and crc32</span></span><br><span class="line"><span class="symbol">  rep:</span> hex    <span class="meta"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="赞赏"><a href="#赞赏" class="headerlink" title="赞赏"></a>赞赏</h2><ul><li><p>获取微信，支付宝收款二维码</p></li><li><p>找到主题 配置文件</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Rewrad</span></span><br><span class="line"><span class="symbol">reward_comment:</span> 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line"><span class="symbol">wechatpay:</span> 图片链接或图片相对路径</span><br><span class="line"><span class="symbol">alipay:</span> 图片链接或图片相对路径</span><br></pre></td></tr></table></figure></li></ul><h2 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h2><p>Next主题使用的Fontawesome版本需要升级才能支持QQ和微信等社交图标。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Travis-CI持续集成&quot;&gt;&lt;a href=&quot;#Travis-CI持续集成&quot; class=&quot;headerlink&quot; title=&quot;Travis CI持续集成&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://kkzzhizhou.github.io/2019/03/16/Hexo%E4%BD%BF%E7%94%A8Travis%20CI%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/&quot;&gt;Travis CI持续集成&lt;/a&gt;&lt;/h2&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://blog.ziiyc.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://blog.ziiyc.com/tags/Hexo/"/>
    
    <category term="Next" scheme="http://blog.ziiyc.com/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>折腾Ubuntu 16.04，从美化到常用软件安装</title>
    <link href="http://blog.ziiyc.com/post/ubuntu-desktop.html"/>
    <id>http://blog.ziiyc.com/post/ubuntu-desktop.html</id>
    <published>2018-09-06T15:19:01.000Z</published>
    <updated>2020-03-16T06:56:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>根据2018年2月桌面操作系统市场占比(下图)，Linux虽拥有众多桌面版本分支，如Ubuntu，Deepin，Kubuntu等，却仅仅占桌面操作系统全球市场份额的1.46%。</p><p>这其中原因有很多，对于个人的选择来说，影响最大是两个因素，一是使用界面，二是软件数量和质量。</p><p>这篇文章针对我个人的使用情况，解决从美化到软件安装的各种需求。</p><p><img src="https://blog.ziiyc.com/images/194558ea97895178027b5de3bed2a3f3_MD5.jpg" alt="ubuntu-desktop.jpg"></p><span id="more"></span> <h2 id="系统美化"><a href="#系统美化" class="headerlink" title="系统美化"></a>系统美化</h2><h3 id="安装主题：Arc-GTK"><a href="#安装主题：Arc-GTK" class="headerlink" title="安装主题：Arc GTK"></a>安装主题：Arc GTK</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c <span class="string">&quot;echo &#x27;deb http://download.opensuse.org/repositories/home:/Horst3180/xUbuntu_16.04/ /&#x27; &gt;&gt; /etc/apt/sources.list.d/arc-theme.list&quot;</span></span><br><span class="line">wget http://download.opensuse.org/repositories/home:Horst3180/xUbuntu_16.04/Release.key</span><br><span class="line">sudo apt-key add - &lt; Release.key</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install arc-theme</span><br></pre></td></tr></table></figure><h3 id="安装图标：papirus-icon-theme-gtk"><a href="#安装图标：papirus-icon-theme-gtk" class="headerlink" title="安装图标：papirus-icon-theme-gtk"></a>安装图标：papirus-icon-theme-gtk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:varlesh-l/papirus-pack</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install papirus-gtk-icon-theme</span><br></pre></td></tr></table></figure><h3 id="应用主题图标：Unity-Tweak-Tool"><a href="#应用主题图标：Unity-Tweak-Tool" class="headerlink" title="应用主题图标：Unity-Tweak-Tool"></a>应用主题图标：Unity-Tweak-Tool</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install Unity-Tweak-Tool</span><br></pre></td></tr></table></figure><h2 id="常用软件安装"><a href="#常用软件安装" class="headerlink" title="常用软件安装"></a>常用软件安装</h2><p>不喜欢Ubuntu Gnome桌面，比较喜欢Unity桌面，对于我当前使用的软件来说兼容性相当好。</p><h3 id="运行Windows软件：deepin-wine-ubuntu"><a href="#运行Windows软件：deepin-wine-ubuntu" class="headerlink" title="运行Windows软件：deepin-wine-ubuntu"></a>运行Windows软件：<a href="https://github.com/wszqkzqk/deepin-wine-ubuntu">deepin-wine-ubuntu</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu.git deepin-wine-ubuntu</span><br><span class="line"><span class="built_in">cd</span> deepin-wine-ubuntu</span><br><span class="line"><span class="built_in">chmod</span> +x ./install</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>可解决下列日常软件安装需求：</p><ul><li><p>QQ</p></li><li><p>微信</p></li><li><p>百度网盘</p></li><li><p>WinRAR</p></li><li><p>迅雷极速版</p></li><li><p>阿里旺旺</p></li></ul><h3 id="全局搜索：Albert"><a href="#全局搜索：Albert" class="headerlink" title="全局搜索：Albert"></a>全局搜索：Albert</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:nilarimogard/webupd8</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install albert</span><br></pre></td></tr></table></figure><h3 id="网络工具：electron-ssr"><a href="#网络工具：electron-ssr" class="headerlink" title="网络工具：electron-ssr"></a>网络工具：<a href="https://github.com/erguotou520/electron-ssr/releases">electron-ssr</a></h3><h3 id="音乐播放器：网易云音乐"><a href="#音乐播放器：网易云音乐" class="headerlink" title="音乐播放器：网易云音乐"></a>音乐播放器：<a href="https://music.163.com/#/download">网易云音乐</a></h3><h3 id="浏览器：Chrome"><a href="#浏览器：Chrome" class="headerlink" title="浏览器：Chrome"></a>浏览器：<a href="https://www.google.com/intl/zh-CN_ALL/chrome/">Chrome</a></h3><h3 id="输入法：Fictx-可安装五笔输入法"><a href="#输入法：Fictx-可安装五笔输入法" class="headerlink" title="输入法：Fictx(可安装五笔输入法)"></a>输入法：Fictx(可安装五笔输入法)</h3><p>系统自带，安装五笔输入法方式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fcitx-table-wubi</span><br></pre></td></tr></table></figure><h3 id="Markdown写作：Typora"><a href="#Markdown写作：Typora" class="headerlink" title="Markdown写作：Typora"></a>Markdown写作：<a href="https://typora.io/#download">Typora</a></h3><h3 id="代码编辑：Sublime-Text-3"><a href="#代码编辑：Sublime-Text-3" class="headerlink" title="代码编辑：Sublime Text 3"></a>代码编辑：<a href="https://www.sublimetext.com/3">Sublime Text 3</a></h3><h3 id="下载工具：uGET"><a href="#下载工具：uGET" class="headerlink" title="下载工具：uGET"></a>下载工具：uGET</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install uget</span><br></pre></td></tr></table></figure><h3 id="剪贴板增强：copyq"><a href="#剪贴板增强：copyq" class="headerlink" title="剪贴板增强：copyq"></a>剪贴板增强：copyq</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:hluk/copyq</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install copyq</span><br></pre></td></tr></table></figure><h3 id="邮件，日历，联系人，任务：Thunderbird"><a href="#邮件，日历，联系人，任务：Thunderbird" class="headerlink" title="邮件，日历，联系人，任务：Thunderbird"></a>邮件，日历，联系人，任务：Thunderbird</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install thunderbird</span><br></pre></td></tr></table></figure><h3 id="截图工具：Shutter"><a href="#截图工具：Shutter" class="headerlink" title="截图工具：Shutter"></a>截图工具：Shutter</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install thunderbird</span><br></pre></td></tr></table></figure><h3 id="虚拟机：VMware-Workstation"><a href="#虚拟机：VMware-Workstation" class="headerlink" title="虚拟机：VMware Workstation"></a>虚拟机：VMware Workstation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载最新版VMware Workstation：</span></span><br><span class="line">wget https://www.vmware.com/go/getworkstation-linux</span><br><span class="line"><span class="comment"># 增加可以执行权限并执行</span></span><br><span class="line"><span class="built_in">chmod</span> +x getworkstation-linux</span><br><span class="line">sudo ./getworkstation-linux</span><br><span class="line"><span class="comment"># 之后进入图形安装界面</span></span><br></pre></td></tr></table></figure><h4 id="安装过程报错：无法在模块路径中找到主题引擎：“murrine”，解决方法"><a href="#安装过程报错：无法在模块路径中找到主题引擎：“murrine”，解决方法" class="headerlink" title="安装过程报错：无法在模块路径中找到主题引擎：“murrine”，解决方法"></a>安装过程报错：无法在模块路径中找到主题引擎：“murrine”，<a href="https://blog.csdn.net/yzf0011/article/details/75215609?locationNum=10&fps=1">解决方法</a></h4><h3 id="系统备份还原：TimeShift"><a href="#系统备份还原：TimeShift" class="headerlink" title="系统备份还原：TimeShift"></a>系统备份还原：TimeShift</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-add-repository -y ppa:teejee2008/ppa</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install timeshift</span><br></pre></td></tr></table></figure><h3 id="硬盘分区工具：Gparted"><a href="#硬盘分区工具：Gparted" class="headerlink" title="硬盘分区工具：Gparted"></a>硬盘分区工具：Gparted</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gparted</span><br></pre></td></tr></table></figure><h3 id="文件-文件夹比较工具：meld"><a href="#文件-文件夹比较工具：meld" class="headerlink" title="文件/文件夹比较工具：meld"></a>文件/文件夹比较工具：meld</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install meld</span><br></pre></td></tr></table></figure><h3 id="办公软件：WPS-Office"><a href="#办公软件：WPS-Office" class="headerlink" title="办公软件：WPS Office"></a>办公软件：<a href="http://wps-community.org/downloads">WPS Office</a></h3><h3 id="状态栏显示天气：优客天气"><a href="#状态栏显示天气：优客天气" class="headerlink" title="状态栏显示天气：优客天气"></a>状态栏显示天气：<a href="http://www.ubuntukylin.com/application/show.php?lang=cn&id=270">优客天气</a></h3><h3 id="启动项管理：gnome-session-properties（系统自带）"><a href="#启动项管理：gnome-session-properties（系统自带）" class="headerlink" title="启动项管理：gnome-session-properties（系统自带）"></a>启动项管理：gnome-session-properties（系统自带）</h3><h3 id="状态栏显示网速：indicator-netspeed-unity"><a href="#状态栏显示网速：indicator-netspeed-unity" class="headerlink" title="状态栏显示网速：indicator-netspeed-unity"></a>状态栏显示网速：indicator-netspeed-unity</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-add-repository ppa:fixnix/netspeed</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install indicator-netspeed-unity</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">indicator-netspeed-unity &amp;</span><br></pre></td></tr></table></figure><h3 id="阻止系统休眠：Caffeine"><a href="#阻止系统休眠：Caffeine" class="headerlink" title="阻止系统休眠：Caffeine"></a>阻止系统休眠：Caffeine</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:caffeine-developers/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install caffeine</span><br></pre></td></tr></table></figure><h2 id="系统自定义设置"><a href="#系统自定义设置" class="headerlink" title="系统自定义设置"></a>系统自定义设置</h2><h3 id="取消输入sudo需要密码"><a href="#取消输入sudo需要密码" class="headerlink" title="取消输入sudo需要密码"></a>取消输入sudo需要密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/sudoers</span><br><span class="line"><span class="comment"># 只要在%sudo ALL=(ALL:ALL) ALL下面添加一行</span></span><br><span class="line">username  ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure><h3 id="tty终端显示中文"><a href="#tty终端显示中文" class="headerlink" title="tty终端显示中文"></a>tty终端显示中文</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先安装fbterm</span></span><br><span class="line">sudo apt-get install fbterm</span><br><span class="line"></span><br><span class="line">sudo gpasswd -a YOUR_USERNAME video</span><br><span class="line">sudo <span class="built_in">setcap</span> <span class="string">&#x27;cap_sys_tty_config+ep&#x27;</span> /usr/bin/fbterm</span><br><span class="line"><span class="comment"># 修改.profile，并添加以下内容</span></span><br><span class="line">vi ~/.profile</span><br><span class="line"><span class="comment"># 如果在tty下就执行fbtrem</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$TERM</span>&quot;</span> = <span class="string">&quot;linux&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment"># exec fbterm</span></span><br><span class="line">  LC_CTYPE=zh_CN.UTF-8 <span class="built_in">exec</span> fbterm</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;根据2018年2月桌面操作系统市场占比(下图)，Linux虽拥有众多桌面版本分支，如Ubuntu，Deepin，Kubuntu等，却仅仅占桌面操作系统全球市场份额的1.46%。&lt;/p&gt;
&lt;p&gt;这其中原因有很多，对于个人的选择来说，影响最大是两个因素，一是使用界面，二是软件数量和质量。&lt;/p&gt;
&lt;p&gt;这篇文章针对我个人的使用情况，解决从美化到软件安装的各种需求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.ziiyc.com/images/194558ea97895178027b5de3bed2a3f3_MD5.jpg&quot; alt=&quot;ubuntu-desktop.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="桌面系统" scheme="http://blog.ziiyc.com/tags/%E6%A1%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
</feed>
